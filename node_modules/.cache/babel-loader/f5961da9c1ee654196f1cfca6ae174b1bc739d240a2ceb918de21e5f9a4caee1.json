{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rayze\\\\Downloads\\\\chatgpt-react-js-main (1)\\\\chatgpt-react-js-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport CGLogo from './chatGPT.png';\nimport AppLogo from './app-logo.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputs, setInputs] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedVersions, setSelectedVersions] = useState([]);\n  const [selectedLibraries, setSelectedLibraries] = useState([]);\n  const [selectedProfile, setSelectedProfile] = useState(\"\");\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleProfileSelection = profile => {\n    setSelectedProfile(profile);\n  };\n  const handleAddInput = () => {\n    setInputs([...inputs, \"\"]);\n  };\n  const handleDeleteInput = index => {\n    const updatedInputs = [...inputs];\n    updatedInputs.splice(index, 1);\n    setInputs(updatedInputs);\n  };\n  const handleInputChange = (index, value) => {\n    const updatedInputs = [...inputs];\n    updatedInputs[index] = value;\n    setInputs(updatedInputs);\n  };\n  const handleLanguageClick = language => {\n    if (selectedLanguages.includes(language)) {\n      setSelectedLanguages(selectedLanguages.filter(lang => lang !== language));\n      setSelectedFrameworks([]);\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n  const handleFrameworkClick = framework => {\n    if (selectedFrameworks.includes(framework)) {\n      setSelectedFrameworks(selectedFrameworks.filter(fw => fw !== framework));\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedFrameworks([...selectedFrameworks, framework]);\n    }\n  };\n  const handleVersionClick = version => {\n    if (selectedVersions.includes(version)) {\n      setSelectedVersions(selectedVersions.filter(ver => ver !== version));\n    } else {\n      setSelectedVersions([...selectedVersions, version]);\n    }\n  };\n  const handleLibraryClick = library => {\n    if (selectedLibraries.includes(library)) {\n      setSelectedLibraries(selectedLibraries.filter(lib => lib !== library));\n    } else {\n      setSelectedLibraries([...selectedLibraries, library]);\n    }\n  };\n  const updatePromptValue = () => {\n    const promptValue = `${inputs.join(', ')} | Languages: ${selectedLanguages.join(', ')} | Frameworks: ${selectedFrameworks.join(', ')} | Versions: ${selectedVersions.join(', ')} | Libraries: ${selectedLibraries.join(', ')} | Profile: ${selectedProfile}`;\n    setPrompt(promptValue);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    axios.post('http://localhost:5555/chat', {\n      prompt\n    }).then(res => {\n      setResponse(res.data);\n      setLoading(false);\n\n      // Create a Blob with the project code\n      const projectCode = new Blob([res.data], {\n        type: 'text/plain'\n      });\n\n      // Create a download link\n      const downloadLink = URL.createObjectURL(projectCode);\n\n      // Trigger the download\n      const link = document.createElement('a');\n      link.href = downloadLink;\n      link.download = 'project.txt';\n      link.click();\n      setResponse('Project code received. Click the link to download.');\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  const programmingLanguages = [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: AppLogo,\n      alt: \"\",\n      className: \"app-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: CGLogo,\n        alt: \"\",\n        className: loading ? 'cg-logo loading' : 'cg-logo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            width: \"1175px\"\n          },\n          value: selectedProfile,\n          onChange: e => handleProfileSelection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Front-end Developer\",\n            children: \"Front-end Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Back-end Developer\",\n            children: \"Back-end Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Full-stack Developer\",\n            children: \"Full-stack Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mobile App Developer\",\n            children: \"Mobile App Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Game Developer\",\n            children: \"Game Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DevOps Engineer\",\n            children: \"DevOps Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Quality Assurance (QA) Engineer\",\n            children: \"Quality Assurance (QA) Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"UI/UX Developer\",\n            children: \"UI/UX Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Data Engineer\",\n            children: \"Data Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Machine Learning Engineer\",\n            children: \"Machine Learning Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputs[0] || \"\",\n            placeholder: \"Specify the project's functionalities\",\n            onChange: e => handleInputChange(0, e.target.value),\n            style: {\n              marginRight: \"65px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 1\n        }, this), inputs.slice(1).map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            placeholder: \"Add a functionality\",\n            onChange: e => handleInputChange(index + 1, e.target.value),\n            style: {\n              marginRight: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteInput(index + 1),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this)]\n        }, index + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddInput,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"response-area\",\n        children: loading ? 'loading...' : response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: \"~ webstylepress ~\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Programming Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this), programmingLanguages.map(language => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLanguageClick(language.name),\n          style: {\n            marginRight: \"10px\",\n            marginBottom: \"10px\",\n            backgroundColor: selectedLanguages.includes(language.name) ? \"lightblue\" : \"#ccc\",\n            color: \"#fff\"\n          },\n          children: language.name\n        }, language.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }, this), selectedLanguages.map(selectedLanguage => {\n        const language = programmingLanguages.find(lang => lang.name === selectedLanguage);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Frameworks for \", selectedLanguage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), language.frameworks.map(framework => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFrameworkClick(framework.name),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedFrameworks.includes(framework.name) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: framework.name\n          }, framework.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this))]\n        }, selectedLanguage, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this);\n      }), selectedFrameworks.map(selectedFramework => {\n        const language = programmingLanguages.find(lang => lang.frameworks.some(fw => fw.name === selectedFramework));\n        const framework = language.frameworks.find(fw => fw.name === selectedFramework);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Versions for \", selectedFramework]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), framework.versions.map(version => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVersionClick(version),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedVersions.includes(version) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: version\n          }, version, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this))]\n        }, selectedFramework, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this);\n      }), selectedFrameworks.map(selectedFramework => {\n        const language = programmingLanguages.find(lang => lang.frameworks.some(fw => fw.name === selectedFramework));\n        const framework = language.frameworks.find(fw => fw.name === selectedFramework);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Libraries for \", selectedFramework]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), framework.libraries.map(library => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLibraryClick(library),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedLibraries.includes(library) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: library\n          }, library, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this))]\n        }, selectedFramework, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: updatePromptValue,\n        children: \"Ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Uj3Q9GizdRFM8HUxWSlh/x4FNX4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","CGLogo","AppLogo","App","inputs","setInputs","selectedLanguages","setSelectedLanguages","selectedFrameworks","setSelectedFrameworks","selectedVersions","setSelectedVersions","selectedLibraries","setSelectedLibraries","selectedProfile","setSelectedProfile","prompt","setPrompt","response","setResponse","loading","setLoading","handleProfileSelection","profile","handleAddInput","handleDeleteInput","index","updatedInputs","splice","handleInputChange","value","handleLanguageClick","language","includes","filter","lang","handleFrameworkClick","framework","fw","handleVersionClick","version","ver","handleLibraryClick","library","lib","updatePromptValue","promptValue","join","handleSubmit","e","preventDefault","post","then","res","data","projectCode","Blob","type","downloadLink","URL","createObjectURL","link","document","createElement","href","download","click","catch","err","console","error","programmingLanguages","width","target","display","alignItems","marginRight","slice","map","input","name","marginBottom","backgroundColor","color","selectedLanguage","find","frameworks","selectedFramework","some","versions","libraries"],"sources":["C:/Users/rayze/Downloads/chatgpt-react-js-main (1)/chatgpt-react-js-main/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport CGLogo from './chatGPT.png';\nimport AppLogo from './app-logo.png';\nimport './App.css';\n\nconst App = () => {\n  const [inputs, setInputs] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedVersions, setSelectedVersions] = useState([]);\n  const [selectedLibraries, setSelectedLibraries] = useState([]);\n  const [selectedProfile, setSelectedProfile] = useState(\"\");\n\n  const [prompt, setPrompt] = useState('');\n\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n\n\n  const handleProfileSelection = (profile) => {\n    setSelectedProfile(profile);\n  };\n\n\n  const handleAddInput = () => {\n    setInputs([...inputs, \"\"]);\n  };\n\n  const handleDeleteInput = (index) => {\n    const updatedInputs = [...inputs];\n    updatedInputs.splice(index, 1);\n    setInputs(updatedInputs);\n  };\n\n  const handleInputChange = (index, value) => {\n    const updatedInputs = [...inputs];\n    updatedInputs[index] = value;\n    setInputs(updatedInputs);\n  };\n\n  const handleLanguageClick = (language) => {\n    if (selectedLanguages.includes(language)) {\n      setSelectedLanguages(\n        selectedLanguages.filter((lang) => lang !== language)\n      );\n      setSelectedFrameworks([]);\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n\n  const handleFrameworkClick = (framework) => {\n    if (selectedFrameworks.includes(framework)) {\n      setSelectedFrameworks(\n        selectedFrameworks.filter((fw) => fw !== framework)\n      );\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedFrameworks([...selectedFrameworks, framework]);\n    }\n  };\n\n  const handleVersionClick = (version) => {\n    if (selectedVersions.includes(version)) {\n      setSelectedVersions(selectedVersions.filter((ver) => ver !== version));\n    } else {\n      setSelectedVersions([...selectedVersions, version]);\n    }\n  };\n\n  const handleLibraryClick = (library) => {\n    if (selectedLibraries.includes(library)) {\n      setSelectedLibraries(selectedLibraries.filter((lib) => lib !== library));\n    } else {\n      setSelectedLibraries([...selectedLibraries, library]);\n    }\n  };\n\n  const updatePromptValue = () => {\n    const promptValue = `${inputs.join(', ')} | Languages: ${selectedLanguages.join(', ')} | Frameworks: ${selectedFrameworks.join(', ')} | Versions: ${selectedVersions.join(', ')} | Libraries: ${selectedLibraries.join(', ')} | Profile: ${selectedProfile}`;\n    setPrompt(promptValue);\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    axios\n      .post('http://localhost:5555/chat', { prompt })\n      .then((res) => {\n        setResponse(res.data);\n        setLoading(false);\n\n        // Create a Blob with the project code\n        const projectCode = new Blob([res.data], { type: 'text/plain' });\n\n        // Create a download link\n        const downloadLink = URL.createObjectURL(projectCode);\n\n        // Trigger the download\n        const link = document.createElement('a');\n        link.href = downloadLink;\n        link.download = 'project.txt';\n        link.click();\n\n        setResponse('Project code received. Click the link to download.');\n      })\n      .catch((err) => { \n        console.error(err);\n      });\n  };\n  const programmingLanguages = [\n  ];\n\n  return (\n    <div className=\"wrapper\">\n      <img src={AppLogo} alt=\"\" className=\"app-logo\" />\n      <form onSubmit={handleSubmit}>\n        <img src={CGLogo} alt=\"\" className={loading ? 'cg-logo loading' : 'cg-logo'} />\n        <div>\n        {/* Display inputs */}\n        <select\n          style={{ width: \"1175px\" }}\n          value={selectedProfile}\n          onChange={(e) => handleProfileSelection(e.target.value)}\n        >\n          <option value=\"\">Select a profile</option>\n          <option value=\"Front-end Developer\">Front-end Developer</option>\n          <option value=\"Back-end Developer\">Back-end Developer</option>\n          <option value=\"Full-stack Developer\">Full-stack Developer</option>\n          <option value=\"Mobile App Developer\">Mobile App Developer</option>\n          <option value=\"Game Developer\">Game Developer</option>\n          <option value=\"DevOps Engineer\">DevOps Engineer</option>\n          <option value=\"Quality Assurance (QA) Engineer\">\n            Quality Assurance (QA) Engineer\n          </option>\n          <option value=\"UI/UX Developer\">UI/UX Developer</option>\n          <option value=\"Data Engineer\">Data Engineer</option>\n          <option value=\"Machine Learning Engineer\">\n            Machine Learning Engineer\n          </option>\n        </select>\n\n\n<div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <input\n          type=\"text\"\n          value={inputs[0] || \"\"}\n          placeholder=\"Specify the project's functionalities\"\n          onChange={(e) => handleInputChange(0, e.target.value)}\n          style={{ marginRight: \"65px\" }}\n        />\n      </div>\n\n      {inputs.slice(1).map((input, index) => (\n        <div key={index + 1} style={{ display: \"flex\", alignItems: \"center\" }}>\n          <input\n            type=\"text\"\n            value={input}\n            placeholder=\"Add a functionality\"\n            onChange={(e) => handleInputChange(index + 1, e.target.value)}\n            style={{ marginRight: \"10px\" }}\n          />\n          <button onClick={() => handleDeleteInput(index + 1)}>-</button>\n        </div>\n      ))}\n\n\n\n\n        <button onClick={handleAddInput}>+</button>\n      </div>\n\n      <p className=\"response-area\">{loading ? 'loading...' : response}</p>\n      <div className=\"footer\">~ webstylepress ~</div>\n    \n      <div>\n        {/* Display programming languages */}\n        <h3>Programming Languages</h3>\n        {programmingLanguages.map((language) => (\n          <button\n            key={language.name}\n            onClick={() => handleLanguageClick(language.name)}\n            style={{\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedLanguages.includes(language.name)\n                ? \"lightblue\"\n                : \"#ccc\",\n              color: \"#fff\",\n            }}\n          >\n            {language.name}\n          </button>\n        ))}\n      </div>\n\n      {selectedLanguages.map((selectedLanguage) => {\n        const language = programmingLanguages.find(\n          (lang) => lang.name === selectedLanguage\n        );\n\n        return (\n          <div key={selectedLanguage}>\n            <h3>Frameworks for {selectedLanguage}</h3>\n            {language.frameworks.map((framework) => (\n              <button\n                key={framework.name}\n                onClick={() => handleFrameworkClick(framework.name)}\n                style={{\n                  marginRight: \"10px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: selectedFrameworks.includes(framework.name)\n                    ? \"lightblue\"\n                    : \"#ccc\",\n                  color: \"#fff\",\n                }}\n              >\n                {framework.name}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n\n      {/* Display selected versions */}\n      {selectedFrameworks.map((selectedFramework) => {\n        const language = programmingLanguages.find((lang) =>\n          lang.frameworks.some((fw) => fw.name === selectedFramework)\n        );\n        const framework = language.frameworks.find(\n          (fw) => fw.name === selectedFramework\n        );\n\n        return (\n          <div key={selectedFramework}>\n            <h3>Versions for {selectedFramework}</h3>\n            {framework.versions.map((version) => (\n              <button\n                key={version}\n                onClick={() => handleVersionClick(version)}\n                style={{\n                  marginRight: \"10px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: selectedVersions.includes(version)\n                    ? \"lightblue\"\n                    : \"#ccc\",\n                  color: \"#fff\",\n                }}\n              >\n                {version}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n\n      {/* Display selected libraries */}\n      {selectedFrameworks.map((selectedFramework) => {\n        const language = programmingLanguages.find((lang) =>\n          lang.frameworks.some((fw) => fw.name === selectedFramework)\n        );\n        const framework = language.frameworks.find(\n          (fw) => fw.name === selectedFramework\n        );\n\n        return (\n          <div key={selectedFramework}>\n            <h3>Libraries for {selectedFramework}</h3>\n            {framework.libraries.map((library) => (\n              <button\n                key={library}\n                onClick={() => handleLibraryClick(library)}\n                style={{\n                  marginRight: \"10px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: selectedLibraries.includes(library)\n                    ? \"lightblue\"\n                    : \"#ccc\",\n                  color: \"#fff\",\n                }}\n              >\n                {library}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n\n<button type=\"submit\" onClick={updatePromptValue}>Ask</button>\n      </form>\n   </div>\n \n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rayze\\\\Downloads\\\\chatgpt-react-js-main (1)\\\\chatgpt-react-js-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport CGLogo from \"./chatGPT.png\";\nimport AppLogo from \"./app-logo.png\";\nimport \"./App.css\";\nimport JSZip from \"jszip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputs, setInputs] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedVersions, setSelectedVersions] = useState([]);\n  const [selectedLibraries, setSelectedLibraries] = useState([]);\n  const [selectedProfile, setSelectedProfile] = useState(\"\");\n  const [selectionComplete, setSelectionComplete] = useState(false);\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleProfileSelection = profile => {\n    setSelectedProfile(profile);\n  };\n  const handleAddInput = () => {\n    setInputs([...inputs, \"\"]);\n  };\n  const handleDeleteInput = index => {\n    const updatedInputs = [...inputs];\n    updatedInputs.splice(index, 1);\n    setInputs(updatedInputs);\n  };\n  const handleInputChange = (index, value) => {\n    const updatedInputs = [...inputs];\n    updatedInputs[index] = value;\n    setInputs(updatedInputs);\n  };\n  const handleLanguageClick = language => {\n    if (selectedLanguages.includes(language)) {\n      setSelectedLanguages(selectedLanguages.filter(lang => lang !== language));\n      setSelectedFrameworks([]);\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n      setSelectionComplete(false);\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n  const handleFrameworkClick = framework => {\n    if (selectedFrameworks.includes(framework)) {\n      setSelectedFrameworks(selectedFrameworks.filter(fw => fw !== framework));\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n      setSelectionComplete(false);\n    } else {\n      setSelectedFrameworks([...selectedFrameworks, framework]);\n      setSelectionComplete(true);\n    }\n  };\n  const handleVersionClick = version => {\n    if (selectedVersions.includes(version)) {\n      setSelectedVersions(selectedVersions.filter(ver => ver !== version));\n    } else {\n      setSelectedVersions([...selectedVersions, version]);\n    }\n    setSelectionComplete(selectedLanguages.length > 0 && selectedFrameworks.length > 0 && selectedVersions.length > 0 && selectedLibraries.length > 0);\n  };\n  const handleLibraryClick = library => {\n    if (selectedLibraries.includes(library)) {\n      setSelectedLibraries(selectedLibraries.filter(lib => lib !== library));\n    } else {\n      setSelectedLibraries([...selectedLibraries, library]);\n    }\n    setSelectionComplete(selectedLanguages.length > 0 && selectedFrameworks.length > 0 && selectedVersions.length > 0 && selectedLibraries.length > 0);\n  };\n  const updatePromptValue = () => {\n    setSelectionComplete(true);\n    const promptValue = `Act as a highly experienced and seasoned :${selectedProfile} in the field .Build a: ${inputs.slice(0)}. Your goal is to generate a code handling the following tasks: ${inputs.slice(1).join(\", \")} in: ${selectedLanguages.join(\", \")} using: ${selectedFrameworks.join(\", \")} with :${selectedVersions.join(\", \")} and ${selectedLibraries.join(\", \")}.\nThen, act as a bug detecter and  review your code for security vulnerabilities and locate any logic errors or resource leaks and add the fixes needed.\nThen, act as a code reviewer and analyze the hole previous provided code for code smells and assess the test coverage and Add improvements to your code .\nThen, act as a bug detecter and  review my code for security vulnerabilities and locate any logic errors and add the fixes needed.\nResponses should not be translations of my input, but a code written in the language I specified. Do not write explanations on your reply. Keep in mind that it is important to be concise, specific, and straight to the point.`;\n    setPrompt(promptValue);\n  };\n  const generateCodeFiles = async () => {\n    try {\n      const res = await axios.post(\"http://localhost:5555/chat\", {\n        prompt\n      });\n      return res.data;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const createFile = (folder, fileName, code) => {\n    folder.file(fileName, code);\n  };\n  const generateAndDownloadFiles = async () => {\n    setLoading(true);\n    updatePromptValue();\n    try {\n      const code = await generateCodeFiles();\n      const folderName = \"GeneratedFolder\";\n      const files = [{\n        name: \"file1.js\",\n        code: code\n      }\n      // Add more files here if needed\n      ];\n\n      const zip = new JSZip();\n      const folder = zip.folder(folderName);\n      files.forEach(file => {\n        const fileName = `${file.name}`;\n        createFile(folder, fileName, file.code);\n      });\n      const zipBlob = await zip.generateAsync({\n        type: \"blob\"\n      });\n      const zipDownloadLink = URL.createObjectURL(zipBlob);\n      const link = document.createElement(\"a\");\n      link.href = zipDownloadLink;\n      link.download = `${folderName}.zip`;\n      link.click();\n      setResponse(\"Project files received. Click the link to download.\");\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (selectedLanguages.length > 0 && selectedFrameworks.length > 0 && selectedVersions.length > 0 && selectedLibraries.length > 0) {\n      generateAndDownloadFiles();\n    } else {\n      console.log(\"Please select all the desired languages, frameworks, versions, and libraries.\");\n    }\n  };\n  const programmingLanguages = [{\n    name: \"JavaScript\",\n    frameworks: [{\n      name: \"React\",\n      versions: [\"17.0.2\", \"16.13.1\"],\n      libraries: [\"React-DOM\", \"Redux\"]\n    }, {\n      name: \"Angular\",\n      versions: [\"12.0.0\", \"11.2.14\"],\n      libraries: [\"RxJS\", \"NgRx\"]\n    }]\n  }, {\n    name: \"Python\",\n    frameworks: [{\n      name: \"Django\",\n      versions: [\"3.2.4\", \"2.2.24\"],\n      libraries: [\"Django REST Framework\", \"Celery\"]\n    }, {\n      name: \"Flask\",\n      versions: [\"2.0.1\", \"1.1.4\"],\n      libraries: [\"Flask-RESTful\", \"SQLAlchemy\"]\n    }]\n  }, {\n    name: \"Java\",\n    frameworks: [{\n      name: \"Spring Boot\",\n      versions: [\"2.5.0\", \"2.4.6\"],\n      libraries: [\"Spring Data JPA\", \"Spring Security\"]\n    }, {\n      name: \"Hibernate\",\n      versions: [\"5.5.3\", \"5.4.31\"],\n      libraries: [\"Java Persistence API (JPA)\", \"C3P0\"]\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: AppLogo,\n      alt: \"\",\n      className: \"app-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CGLogo,\n          alt: \"\",\n          className: loading ? \"cg-logo loading\" : \"cg-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            width: \"1300px\"\n          },\n          value: selectedProfile,\n          onChange: e => handleProfileSelection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Front-end Developer\",\n            children: \"Front-end Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Back-end Developer\",\n            children: \"Back-end Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Full-stack Developer\",\n            children: \"Full-stack Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mobile App Developer\",\n            children: \"Mobile App Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Game Developer\",\n            children: \"Game Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DevOps Engineer\",\n            children: \"DevOps Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Quality Assurance (QA) Engineer\",\n            children: \"Quality Assurance (QA) Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"UI/UX Developer\",\n            children: \"UI/UX Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Data Engineer\",\n            children: \"Data Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Machine Learning Engineer\",\n            children: \"Machine Learning Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputs[0] || \"\",\n            placeholder: \"Provide your Main Task\",\n            onChange: e => handleInputChange(0, e.target.value),\n            style: {\n              marginRight: \"65px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), inputs.slice(1).map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            placeholder: \"Add a functionality\",\n            onChange: e => handleInputChange(index + 1, e.target.value),\n            style: {\n              marginRight: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteInput(index + 1),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, index + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddInput,\n          children: \"Add a functionality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Programming Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), programmingLanguages.map(language => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLanguageClick(language.name),\n          style: {\n            marginRight: \"10px\",\n            marginBottom: \"10px\",\n            backgroundColor: selectedLanguages.includes(language.name) ? \"lightblue\" : \"#ccc\",\n            color: \"#fff\"\n          },\n          children: language.name\n        }, language.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), selectedLanguages.map(selectedLanguage => {\n        const language = programmingLanguages.find(lang => lang.name === selectedLanguage);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Frameworks for \", selectedLanguage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), language.frameworks.map(framework => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFrameworkClick(framework.name),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedFrameworks.includes(framework.name) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: framework.name\n          }, framework.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this))]\n        }, selectedLanguage, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this);\n      }), selectedFrameworks.map(selectedFramework => {\n        const language = programmingLanguages.find(lang => lang.frameworks.some(fw => fw.name === selectedFramework));\n        const framework = language.frameworks.find(fw => fw.name === selectedFramework);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Versions for \", selectedFramework]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), framework.versions.map(version => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVersionClick(version),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedVersions.includes(version) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: version\n          }, version, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this))]\n        }, selectedFramework, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this);\n      }), selectedFrameworks.map(selectedFramework => {\n        const language = programmingLanguages.find(lang => lang.frameworks.some(fw => fw.name === selectedFramework));\n        const framework = language.frameworks.find(fw => fw.name === selectedFramework);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Libraries for \", selectedFramework]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), framework.libraries.map(library => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLibraryClick(library),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedLibraries.includes(library) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: library\n          }, library, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 17\n          }, this))]\n        }, selectedFramework, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading || !selectionComplete,\n        onClick: handleSubmit,\n        children: \"Generate and Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"response-area\",\n      children: loading ? \"loading...\" : response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"i31kDcIVrg++hCR+Xkry8ccK2Q0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","CGLogo","AppLogo","JSZip","App","inputs","setInputs","selectedLanguages","setSelectedLanguages","selectedFrameworks","setSelectedFrameworks","selectedVersions","setSelectedVersions","selectedLibraries","setSelectedLibraries","selectedProfile","setSelectedProfile","selectionComplete","setSelectionComplete","prompt","setPrompt","response","setResponse","loading","setLoading","handleProfileSelection","profile","handleAddInput","handleDeleteInput","index","updatedInputs","splice","handleInputChange","value","handleLanguageClick","language","includes","filter","lang","handleFrameworkClick","framework","fw","handleVersionClick","version","ver","length","handleLibraryClick","library","lib","updatePromptValue","promptValue","slice","join","generateCodeFiles","res","post","data","err","console","error","createFile","folder","fileName","code","file","generateAndDownloadFiles","folderName","files","name","zip","forEach","zipBlob","generateAsync","type","zipDownloadLink","URL","createObjectURL","link","document","createElement","href","download","click","handleSubmit","e","preventDefault","log","programmingLanguages","frameworks","versions","libraries","width","target","display","alignItems","marginRight","map","input","marginBottom","backgroundColor","color","selectedLanguage","find","selectedFramework","some"],"sources":["C:/Users/rayze/Downloads/chatgpt-react-js-main (1)/chatgpt-react-js-main/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport CGLogo from \"./chatGPT.png\";\nimport AppLogo from \"./app-logo.png\";\nimport \"./App.css\";\nimport JSZip from \"jszip\";\n\nconst App = () => {\n  const [inputs, setInputs] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedVersions, setSelectedVersions] = useState([]);\n  const [selectedLibraries, setSelectedLibraries] = useState([]);\n  const [selectedProfile, setSelectedProfile] = useState(\"\");\n  const [selectionComplete, setSelectionComplete] = useState(false);\n\n  const [prompt, setPrompt] = useState(\"\");\n\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleProfileSelection = (profile) => {\n    setSelectedProfile(profile);\n  };\n\n  const handleAddInput = () => {\n    setInputs([...inputs, \"\"]);\n  };\n\n  const handleDeleteInput = (index) => {\n    const updatedInputs = [...inputs];\n    updatedInputs.splice(index, 1);\n    setInputs(updatedInputs);\n  };\n\n  const handleInputChange = (index, value) => {\n    const updatedInputs = [...inputs];\n    updatedInputs[index] = value;\n    setInputs(updatedInputs);\n  };\n\n  const handleLanguageClick = (language) => {\n    if (selectedLanguages.includes(language)) {\n      setSelectedLanguages(\n        selectedLanguages.filter((lang) => lang !== language)\n      );\n      setSelectedFrameworks([]);\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n      setSelectionComplete(false);\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n\n  const handleFrameworkClick = (framework) => {\n    if (selectedFrameworks.includes(framework)) {\n      setSelectedFrameworks(\n        selectedFrameworks.filter((fw) => fw !== framework)\n      );\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n      setSelectionComplete(false);\n    } else {\n      setSelectedFrameworks([...selectedFrameworks, framework]);\n      setSelectionComplete(true);\n    }\n  };\n\n  const handleVersionClick = (version) => {\n    if (selectedVersions.includes(version)) {\n      setSelectedVersions(selectedVersions.filter((ver) => ver !== version));\n    } else {\n      setSelectedVersions([...selectedVersions, version]);\n    }\n    setSelectionComplete(\n      selectedLanguages.length > 0 &&\n        selectedFrameworks.length > 0 &&\n        selectedVersions.length > 0 &&\n        selectedLibraries.length > 0\n    );\n  };\n\n  const handleLibraryClick = (library) => {\n    if (selectedLibraries.includes(library)) {\n      setSelectedLibraries(selectedLibraries.filter((lib) => lib !== library));\n    } else {\n      setSelectedLibraries([...selectedLibraries, library]);\n    }\n    setSelectionComplete(\n      selectedLanguages.length > 0 &&\n        selectedFrameworks.length > 0 &&\n        selectedVersions.length > 0 &&\n        selectedLibraries.length > 0\n    );\n  };\n\n  const updatePromptValue = () => {\nsetSelectionComplete(true);\nconst promptValue = `Act as a highly experienced and seasoned :${selectedProfile} in the field .Build a: ${inputs.slice(\n      0\n    )}. Your goal is to generate a code handling the following tasks: ${inputs\n      .slice(1)\n      .join(\", \")} in: ${selectedLanguages.join(\n      \", \"\n    )} using: ${selectedFrameworks.join(\", \")} with :${selectedVersions.join(\n      \", \"\n    )} and ${selectedLibraries.join(\", \")}.\nThen, act as a bug detecter and  review your code for security vulnerabilities and locate any logic errors or resource leaks and add the fixes needed.\nThen, act as a code reviewer and analyze the hole previous provided code for code smells and assess the test coverage and Add improvements to your code .\nThen, act as a bug detecter and  review my code for security vulnerabilities and locate any logic errors and add the fixes needed.\nResponses should not be translations of my input, but a code written in the language I specified. Do not write explanations on your reply. Keep in mind that it is important to be concise, specific, and straight to the point.`;\n    setPrompt(promptValue);\n  };\n\n  const generateCodeFiles = async () => {\n    try {\n      const res = await axios.post(\"http://localhost:5555/chat\", { prompt });\n      return res.data;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const createFile = (folder, fileName, code) => {\n    folder.file(fileName, code);\n  };\n\n  const generateAndDownloadFiles = async () => {\n    setLoading(true);\n    updatePromptValue();\n\n    try {\n      const code = await generateCodeFiles();\n      const folderName = \"GeneratedFolder\";\n      const files = [\n        { name: \"file1.js\", code: code },\n        // Add more files here if needed\n      ];\n\n      const zip = new JSZip();\n      const folder = zip.folder(folderName);\n\n      files.forEach((file) => {\n        const fileName = `${file.name}`;\n        createFile(folder, fileName, file.code);\n      });\n\n      const zipBlob = await zip.generateAsync({ type: \"blob\" });\n      const zipDownloadLink = URL.createObjectURL(zipBlob);\n\n      const link = document.createElement(\"a\");\n      link.href = zipDownloadLink;\n      link.download = `${folderName}.zip`;\n      link.click();\n\n      setResponse(\"Project files received. Click the link to download.\");\n    } catch (err) {\n      console.error(err);\n    }\n\n    setLoading(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (\n      selectedLanguages.length > 0 &&\n      selectedFrameworks.length > 0 &&\n      selectedVersions.length > 0 &&\n      selectedLibraries.length > 0\n    ) {\n      generateAndDownloadFiles();\n    } else {\n      console.log(\n        \"Please select all the desired languages, frameworks, versions, and libraries.\"\n      );\n    }\n  };\n\n  const programmingLanguages = [\n    {\n      name: \"JavaScript\",\n      frameworks: [\n        {\n          name: \"React\",\n          versions: [\"17.0.2\", \"16.13.1\"],\n          libraries: [\"React-DOM\", \"Redux\"],\n        },\n        {\n          name: \"Angular\",\n          versions: [\"12.0.0\", \"11.2.14\"],\n          libraries: [\"RxJS\", \"NgRx\"],\n        },\n      ],\n    },\n    {\n      name: \"Python\",\n      frameworks: [\n        {\n          name: \"Django\",\n          versions: [\"3.2.4\", \"2.2.24\"],\n          libraries: [\"Django REST Framework\", \"Celery\"],\n        },\n        {\n          name: \"Flask\",\n          versions: [\"2.0.1\", \"1.1.4\"],\n          libraries: [\"Flask-RESTful\", \"SQLAlchemy\"],\n        },\n      ],\n    },\n    {\n      name: \"Java\",\n      frameworks: [\n        {\n          name: \"Spring Boot\",\n          versions: [\"2.5.0\", \"2.4.6\"],\n          libraries: [\"Spring Data JPA\", \"Spring Security\"],\n        },\n        {\n          name: \"Hibernate\",\n          versions: [\"5.5.3\", \"5.4.31\"],\n          libraries: [\"Java Persistence API (JPA)\", \"C3P0\"],\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"wrapper\">\n      <img src={AppLogo} alt=\"\" className=\"app-logo\" />\n      <form onSubmit={handleSubmit}>\n        <div>\n          <img\n            src={CGLogo}\n            alt=\"\"\n            className={loading ? \"cg-logo loading\" : \"cg-logo\"}\n          />\n          <select\n            style={{ width: \"1300px\" }}\n            value={selectedProfile}\n            onChange={(e) => handleProfileSelection(e.target.value)}\n          >\n            <option value=\"\">Select a profile</option>\n            <option value=\"Front-end Developer\">Front-end Developer</option>\n            <option value=\"Back-end Developer\">Back-end Developer</option>\n            <option value=\"Full-stack Developer\">Full-stack Developer</option>\n            <option value=\"Mobile App Developer\">Mobile App Developer</option>\n            <option value=\"Game Developer\">Game Developer</option>\n            <option value=\"DevOps Engineer\">DevOps Engineer</option>\n            <option value=\"Quality Assurance (QA) Engineer\">\n              Quality Assurance (QA) Engineer\n            </option>\n            <option value=\"UI/UX Developer\">UI/UX Developer</option>\n            <option value=\"Data Engineer\">Data Engineer</option>\n            <option value=\"Machine Learning Engineer\">\n              Machine Learning Engineer\n            </option>\n          </select>\n\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <input\n              type=\"text\"\n              value={inputs[0] || \"\"}\n              placeholder=\"Provide your Main Task\"\n              onChange={(e) => handleInputChange(0, e.target.value)}\n              style={{ marginRight: \"65px\" }}\n            />\n          </div>\n\n          {inputs.slice(1).map((input, index) => (\n            <div\n              key={index + 1}\n              style={{ display: \"flex\", alignItems: \"center\" }}\n            >\n              <input\n                type=\"text\"\n                value={input}\n                placeholder=\"Add a functionality\"\n                onChange={(e) => handleInputChange(index + 1, e.target.value)}\n                style={{ marginRight: \"10px\" }}\n              />\n              <button onClick={() => handleDeleteInput(index + 1)}>\n                Delete\n              </button>\n            </div>\n          ))}\n\n          <button onClick={handleAddInput}>Add a functionality</button>\n        </div>\n\n        <div>\n          {/* Display programming languages */}\n          <h3>Programming Languages</h3>\n          {programmingLanguages.map((language) => (\n            <button\n              key={language.name}\n              onClick={() => handleLanguageClick(language.name)}\n              style={{\n                marginRight: \"10px\",\n                marginBottom: \"10px\",\n                backgroundColor: selectedLanguages.includes(language.name)\n                  ? \"lightblue\"\n                  : \"#ccc\",\n                color: \"#fff\",\n              }}\n            >\n              {language.name}\n            </button>\n          ))}\n        </div>\n\n        {selectedLanguages.map((selectedLanguage) => {\n          const language = programmingLanguages.find(\n            (lang) => lang.name === selectedLanguage\n          );\n\n          return (\n            <div key={selectedLanguage}>\n              <h3>Frameworks for {selectedLanguage}</h3>\n              {language.frameworks.map((framework) => (\n                <button\n                  key={framework.name}\n                  onClick={() => handleFrameworkClick(framework.name)}\n                  style={{\n                    marginRight: \"10px\",\n                    marginBottom: \"10px\",\n                    backgroundColor: selectedFrameworks.includes(framework.name)\n                      ? \"lightblue\"\n                      : \"#ccc\",\n                    color: \"#fff\",\n                  }}\n                >\n                  {framework.name}\n                </button>\n              ))}\n            </div>\n          );\n        })}\n\n        {/* Display selected versions */}\n        {selectedFrameworks.map((selectedFramework) => {\n          const language = programmingLanguages.find((lang) =>\n            lang.frameworks.some((fw) => fw.name === selectedFramework)\n          );\n          const framework = language.frameworks.find(\n            (fw) => fw.name === selectedFramework\n          );\n\n          return (\n            <div key={selectedFramework}>\n              <h3>Versions for {selectedFramework}</h3>\n              {framework.versions.map((version) => (\n                <button\n                  key={version}\n                  onClick={() => handleVersionClick(version)}\n                  style={{\n                    marginRight: \"10px\",\n                    marginBottom: \"10px\",\n                    backgroundColor: selectedVersions.includes(version)\n                      ? \"lightblue\"\n                      : \"#ccc\",\n                    color: \"#fff\",\n                  }}\n                >\n                  {version}\n                </button>\n              ))}\n            </div>\n          );\n        })}\n\n        {/* Display selected libraries */}\n        {selectedFrameworks.map((selectedFramework) => {\n          const language = programmingLanguages.find((lang) =>\n            lang.frameworks.some((fw) => fw.name === selectedFramework)\n          );\n          const framework = language.frameworks.find(\n            (fw) => fw.name === selectedFramework\n          );\n\n          return (\n            <div key={selectedFramework}>\n              <h3>Libraries for {selectedFramework}</h3>\n              {framework.libraries.map((library) => (\n                <button\n                  key={library}\n                  onClick={() => handleLibraryClick(library)}\n                  style={{\n                    marginRight: \"10px\",\n                    marginBottom: \"10px\",\n                    backgroundColor: selectedLibraries.includes(library)\n                      ? \"lightblue\"\n                      : \"#ccc\",\n                    color: \"#fff\",\n                  }}\n                >\n                  {library}\n                </button>\n              ))}\n            </div>\n          );\n        })}\n\n        <button\n          type=\"submit\"\n          disabled={loading || !selectionComplete}\n          onClick={handleSubmit}\n        >\n          Generate and Download\n        </button>\n      </form>\n      <p className=\"response-area\">{loading ? \"loading...\" : response}</p>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
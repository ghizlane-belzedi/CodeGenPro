{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rayze\\\\Downloads\\\\chatgpt-react-js-main (1)\\\\chatgpt-react-js-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport CGLogo from \"./chatGPT.png\";\nimport AppLogo from \"./app-logo.png\";\nimport \"./App.css\";\nimport JSZip from \"jszip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputs, setInputs] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedVersions, setSelectedVersions] = useState([]);\n  const [selectedLibraries, setSelectedLibraries] = useState([]);\n  const [selectedProfile, setSelectedProfile] = useState(\"\");\n  const [prompt, setPrompt] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleProfileSelection = profile => {\n    setSelectedProfile(profile);\n  };\n  const handleAddInput = () => {\n    setInputs([...inputs, \"\"]);\n  };\n  const handleDeleteInput = index => {\n    const updatedInputs = [...inputs];\n    updatedInputs.splice(index, 1);\n    setInputs(updatedInputs);\n  };\n  const handleInputChange = (index, value) => {\n    const updatedInputs = [...inputs];\n    updatedInputs[index] = value;\n    setInputs(updatedInputs);\n  };\n  const handleLanguageClick = language => {\n    if (selectedLanguages.includes(language)) {\n      setSelectedLanguages(selectedLanguages.filter(lang => lang !== language));\n      setSelectedFrameworks([]);\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n  const handleFrameworkClick = framework => {\n    if (selectedFrameworks.includes(framework)) {\n      setSelectedFrameworks(selectedFrameworks.filter(fw => fw !== framework));\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedFrameworks([...selectedFrameworks, framework]);\n    }\n  };\n  const handleVersionClick = version => {\n    if (selectedVersions.includes(version)) {\n      setSelectedVersions(selectedVersions.filter(ver => ver !== version));\n    } else {\n      setSelectedVersions([...selectedVersions, version]);\n    }\n  };\n  const handleLibraryClick = library => {\n    if (selectedLibraries.includes(library)) {\n      setSelectedLibraries(selectedLibraries.filter(lib => lib !== library));\n    } else {\n      setSelectedLibraries([...selectedLibraries, library]);\n    }\n  };\n  const generateAndDownloadFiles = async e => {\n    e.preventDefault();\n    setLoading(true);\n    updatePromptValue();\n    try {\n      const folderName = \"GeneratedFolder\";\n      const files = [];\n\n      // Collect inputs and selected buttons in prompt\n      const promptValue = `Act as a highly experienced and seasoned ${selectedProfile} in the field. Build a ${inputs.slice(0)}. Your goal is to generate code handling the following tasks: ${inputs.slice(1).join(\", \")} in ${selectedLanguages.join(\", \")} using ${selectedFrameworks.join(\", \")} with ${selectedVersions.join(\", \")} and ${selectedLibraries.join(\", \")}. Then, act as a bug detector and review your code for security vulnerabilities and locate any logic errors or resource leaks, and add the fixes needed. Then, act as a code reviewer and analyze the whole previously provided code for code smells and assess the test coverage. Add improvements to your code. Then, act as a bug detector and review my code for security vulnerabilities and locate any logic errors, and add the fixes needed. Responses should not be translations of my input but code written in the language I specified. Do not write explanations on your reply. Keep in mind that it is important to be concise, specific, and straight to the point.`;\n\n      // Communicate with the API and get code response\n      const response = await axios.post(\"http://localhost:5555/chat\", {\n        prompt: promptValue\n      });\n\n      // Add code response to the files array\n      files.push({\n        name: \"file1.js\",\n        code: response.data\n      });\n      const zip = new JSZip();\n      const folder = zip.folder(folderName);\n      const createFile = (folder, fileName, code) => {\n        folder.file(fileName, code);\n      };\n      files.forEach(file => {\n        const fileName = `${file.name}`;\n        createFile(folder, fileName, file.code);\n      });\n      const zipBlob = await zip.generateAsync({\n        type: \"blob\"\n      });\n      const zipDownloadLink = URL.createObjectURL(zipBlob);\n      const link = document.createElement(\"a\");\n      link.href = zipDownloadLink;\n      link.download = `${folderName}.zip`;\n      link.click();\n      setResponse(\"Project files received. Click the link to download.\");\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n  };\n  const programmingLanguages = [{\n    name: \"JavaScript\",\n    frameworks: [{\n      name: \"React\",\n      versions: [\"17.0.2\", \"16.13.1\"],\n      libraries: [\"React-DOM\", \"Redux\"]\n    }, {\n      name: \"Angular\",\n      versions: [\"12.0.0\", \"11.2.14\"],\n      libraries: [\"RxJS\", \"NgRx\"]\n    }]\n  }, {\n    name: \"Python\",\n    frameworks: [{\n      name: \"Django\",\n      versions: [\"3.2.4\", \"2.2.24\"],\n      libraries: [\"Django REST Framework\", \"Celery\"]\n    }, {\n      name: \"Flask\",\n      versions: [\"2.0.1\", \"1.1.4\"],\n      libraries: [\"Flask-RESTful\", \"SQLAlchemy\"]\n    }]\n  }, {\n    name: \"Java\",\n    frameworks: [{\n      name: \"Spring Boot\",\n      versions: [\"2.5.0\", \"2.4.6\"],\n      libraries: [\"Spring Data JPA\", \"Spring Security\"]\n    }, {\n      name: \"Hibernate\",\n      versions: [\"5.5.3\", \"5.4.31\"],\n      libraries: [\"Java Persistence API (JPA)\", \"C3P0\"]\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: AppLogo,\n      alt: \"\",\n      className: \"app-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: gene,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CGLogo,\n          alt: \"\",\n          className: loading ? \"cg-logo loading\" : \"cg-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            width: \"1300px\"\n          },\n          value: selectedProfile,\n          onChange: e => handleProfileSelection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Front-end Developer\",\n            children: \"Front-end Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Back-end Developer\",\n            children: \"Back-end Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Full-stack Developer\",\n            children: \"Full-stack Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mobile App Developer\",\n            children: \"Mobile App Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Game Developer\",\n            children: \"Game Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DevOps Engineer\",\n            children: \"DevOps Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Quality Assurance (QA) Engineer\",\n            children: \"Quality Assurance (QA) Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"UI/UX Developer\",\n            children: \"UI/UX Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Data Engineer\",\n            children: \"Data Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Machine Learning Engineer\",\n            children: \"Machine Learning Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputs[0] || \"\",\n            placeholder: \"Provide your Main Task\",\n            onChange: e => handleInputChange(0, e.target.value),\n            style: {\n              marginRight: \"65px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), inputs.slice(1).map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            placeholder: \"Add a functionality\",\n            onChange: e => handleInputChange(index + 1, e.target.value),\n            style: {\n              marginRight: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteInput(index + 1),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, index + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddInput,\n          children: \"Add a functionality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Programming Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), programmingLanguages.map(language => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLanguageClick(language.name),\n          style: {\n            marginRight: \"10px\",\n            marginBottom: \"10px\",\n            backgroundColor: selectedLanguages.includes(language.name) ? \"lightblue\" : \"#ccc\",\n            color: \"#fff\"\n          },\n          children: language.name\n        }, language.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), selectedLanguages.map(selectedLanguage => {\n        const language = programmingLanguages.find(lang => lang.name === selectedLanguage);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Frameworks for \", selectedLanguage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), language.frameworks.map(framework => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFrameworkClick(framework.name),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedFrameworks.includes(framework.name) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: framework.name\n          }, framework.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this))]\n        }, selectedLanguage, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this);\n      }), selectedFrameworks.map(selectedFramework => {\n        const language = programmingLanguages.find(lang => lang.frameworks.some(fw => fw.name === selectedFramework));\n        const framework = language.frameworks.find(fw => fw.name === selectedFramework);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Versions for \", selectedFramework]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), framework.versions.map(version => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVersionClick(version),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedVersions.includes(version) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: version\n          }, version, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this))]\n        }, selectedFramework, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this);\n      }), selectedFrameworks.map(selectedFramework => {\n        const language = programmingLanguages.find(lang => lang.frameworks.some(fw => fw.name === selectedFramework));\n        const framework = language.frameworks.find(fw => fw.name === selectedFramework);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Libraries for \", selectedFramework]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), framework.libraries.map(library => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLibraryClick(library),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedLibraries.includes(library) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: library\n          }, library, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this))]\n        }, selectedFramework, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: generateAndDownloadFiles,\n        disabled: loading,\n        children: \"Generate & Download Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"response-area\",\n      children: loading ? \"loading...\" : response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9I8DsrTfcFHn30+rq65RCGutecY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","CGLogo","AppLogo","JSZip","App","inputs","setInputs","selectedLanguages","setSelectedLanguages","selectedFrameworks","setSelectedFrameworks","selectedVersions","setSelectedVersions","selectedLibraries","setSelectedLibraries","selectedProfile","setSelectedProfile","prompt","setPrompt","response","setResponse","loading","setLoading","handleProfileSelection","profile","handleAddInput","handleDeleteInput","index","updatedInputs","splice","handleInputChange","value","handleLanguageClick","language","includes","filter","lang","handleFrameworkClick","framework","fw","handleVersionClick","version","ver","handleLibraryClick","library","lib","generateAndDownloadFiles","e","preventDefault","updatePromptValue","folderName","files","promptValue","slice","join","post","push","name","code","data","zip","folder","createFile","fileName","file","forEach","zipBlob","generateAsync","type","zipDownloadLink","URL","createObjectURL","link","document","createElement","href","download","click","err","console","error","programmingLanguages","frameworks","versions","libraries","gene","width","target","display","alignItems","marginRight","map","input","marginBottom","backgroundColor","color","selectedLanguage","find","selectedFramework","some"],"sources":["C:/Users/rayze/Downloads/chatgpt-react-js-main (1)/chatgpt-react-js-main/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport CGLogo from \"./chatGPT.png\";\nimport AppLogo from \"./app-logo.png\";\nimport \"./App.css\";\nimport JSZip from \"jszip\";\n\nconst App = () => {\n  const [inputs, setInputs] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedVersions, setSelectedVersions] = useState([]);\n  const [selectedLibraries, setSelectedLibraries] = useState([]);\n  const [selectedProfile, setSelectedProfile] = useState(\"\");\n\n  const [prompt, setPrompt] = useState(\"\");\n\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleProfileSelection = (profile) => {\n    setSelectedProfile(profile);\n  };\n\n  const handleAddInput = () => {\n    setInputs([...inputs, \"\"]);\n  };\n\n  const handleDeleteInput = (index) => {\n    const updatedInputs = [...inputs];\n    updatedInputs.splice(index, 1);\n    setInputs(updatedInputs);\n  };\n\n  const handleInputChange = (index, value) => {\n    const updatedInputs = [...inputs];\n    updatedInputs[index] = value;\n    setInputs(updatedInputs);\n  };\n\n  const handleLanguageClick = (language) => {\n    if (selectedLanguages.includes(language)) {\n      setSelectedLanguages(\n        selectedLanguages.filter((lang) => lang !== language)\n      );\n      setSelectedFrameworks([]);\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n \n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n\n  const handleFrameworkClick = (framework) => {\n    if (selectedFrameworks.includes(framework)) {\n      setSelectedFrameworks(\n        selectedFrameworks.filter((fw) => fw !== framework)\n      );\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedFrameworks([...selectedFrameworks, framework]);\n     \n    }\n  };\n\n  const handleVersionClick = (version) => {\n    if (selectedVersions.includes(version)) {\n      setSelectedVersions(selectedVersions.filter((ver) => ver !== version));\n    } else {\n      setSelectedVersions([...selectedVersions, version]);\n    }\n  };\n\n  const handleLibraryClick = (library) => {\n    if (selectedLibraries.includes(library)) {\n      setSelectedLibraries(selectedLibraries.filter((lib) => lib !== library));\n    } else {\n      setSelectedLibraries([...selectedLibraries, library]);\n    }\n  };\n\n  const generateAndDownloadFiles = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    updatePromptValue();\n  \n    try {\n      const folderName = \"GeneratedFolder\";\n      const files = [];\n  \n      // Collect inputs and selected buttons in prompt\n      const promptValue = `Act as a highly experienced and seasoned ${selectedProfile} in the field. Build a ${inputs.slice(0)}. Your goal is to generate code handling the following tasks: ${inputs.slice(1).join(\", \")} in ${selectedLanguages.join(\", \")} using ${selectedFrameworks.join(\", \")} with ${selectedVersions.join(\", \")} and ${selectedLibraries.join(\", \")}. Then, act as a bug detector and review your code for security vulnerabilities and locate any logic errors or resource leaks, and add the fixes needed. Then, act as a code reviewer and analyze the whole previously provided code for code smells and assess the test coverage. Add improvements to your code. Then, act as a bug detector and review my code for security vulnerabilities and locate any logic errors, and add the fixes needed. Responses should not be translations of my input but code written in the language I specified. Do not write explanations on your reply. Keep in mind that it is important to be concise, specific, and straight to the point.`;\n      \n      // Communicate with the API and get code response\n      const response = await axios.post(\"http://localhost:5555/chat\", { prompt: promptValue });\n      \n      // Add code response to the files array\n      files.push({ name: \"file1.js\", code: response.data });\n  \n      const zip = new JSZip();\n      const folder = zip.folder(folderName);\n  \n      const createFile = (folder, fileName, code) => {\n        folder.file(fileName, code);\n      };\n  \n      files.forEach((file) => {\n        const fileName = `${file.name}`;\n        createFile(folder, fileName, file.code);\n      });\n  \n      const zipBlob = await zip.generateAsync({ type: \"blob\" });\n      const zipDownloadLink = URL.createObjectURL(zipBlob);\n  \n      const link = document.createElement(\"a\");\n      link.href = zipDownloadLink;\n      link.download = `${folderName}.zip`;\n      link.click();\n  \n      setResponse(\"Project files received. Click the link to download.\");\n    } catch (err) {\n      console.error(err);\n    }\n  \n    setLoading(false);\n  };\n  \n  \n  const programmingLanguages = [\n    {\n      name: \"JavaScript\",\n      frameworks: [\n        {\n          name: \"React\",\n          versions: [\"17.0.2\", \"16.13.1\"],\n          libraries: [\"React-DOM\", \"Redux\"],\n        },\n        {\n          name: \"Angular\",\n          versions: [\"12.0.0\", \"11.2.14\"],\n          libraries: [\"RxJS\", \"NgRx\"],\n        },\n      ],\n    },\n    {\n      name: \"Python\",\n      frameworks: [\n        {\n          name: \"Django\",\n          versions: [\"3.2.4\", \"2.2.24\"],\n          libraries: [\"Django REST Framework\", \"Celery\"],\n        },\n        {\n          name: \"Flask\",\n          versions: [\"2.0.1\", \"1.1.4\"],\n          libraries: [\"Flask-RESTful\", \"SQLAlchemy\"],\n        },\n      ],\n    },\n    {\n      name: \"Java\",\n      frameworks: [\n        {\n          name: \"Spring Boot\",\n          versions: [\"2.5.0\", \"2.4.6\"],\n          libraries: [\"Spring Data JPA\", \"Spring Security\"],\n        },\n        {\n          name: \"Hibernate\",\n          versions: [\"5.5.3\", \"5.4.31\"],\n          libraries: [\"Java Persistence API (JPA)\", \"C3P0\"],\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"wrapper\">\n      <img src={AppLogo} alt=\"\" className=\"app-logo\" />\n      <form onSubmit={gene}>\n        <div>\n          <img\n            src={CGLogo}\n            alt=\"\"\n            className={loading ? \"cg-logo loading\" : \"cg-logo\"}\n          />\n          <select\n            style={{ width: \"1300px\" }}\n            value={selectedProfile}\n            onChange={(e) => handleProfileSelection(e.target.value)}\n          >\n            <option value=\"\">Select a profile</option>\n            <option value=\"Front-end Developer\">Front-end Developer</option>\n            <option value=\"Back-end Developer\">Back-end Developer</option>\n            <option value=\"Full-stack Developer\">Full-stack Developer</option>\n            <option value=\"Mobile App Developer\">Mobile App Developer</option>\n            <option value=\"Game Developer\">Game Developer</option>\n            <option value=\"DevOps Engineer\">DevOps Engineer</option>\n            <option value=\"Quality Assurance (QA) Engineer\">\n              Quality Assurance (QA) Engineer\n            </option>\n            <option value=\"UI/UX Developer\">UI/UX Developer</option>\n            <option value=\"Data Engineer\">Data Engineer</option>\n            <option value=\"Machine Learning Engineer\">\n              Machine Learning Engineer\n            </option>\n          </select>\n\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <input\n              type=\"text\"\n              value={inputs[0] || \"\"}\n              placeholder=\"Provide your Main Task\"\n              onChange={(e) => handleInputChange(0, e.target.value)}\n              style={{ marginRight: \"65px\" }}\n            />\n          </div>\n\n          {inputs.slice(1).map((input, index) => (\n            <div\n              key={index + 1}\n              style={{ display: \"flex\", alignItems: \"center\" }}\n            >\n              <input\n                type=\"text\"\n                value={input}\n                placeholder=\"Add a functionality\"\n                onChange={(e) => handleInputChange(index + 1, e.target.value)}\n                style={{ marginRight: \"10px\" }}\n              />\n              <button onClick={() => handleDeleteInput(index + 1)}>\n                Delete\n              </button>\n            </div>\n          ))}\n\n          <button onClick={handleAddInput}>Add a functionality</button>\n        </div>\n\n        <div>\n          {/* Display programming languages */}\n          <h3>Programming Languages</h3>\n          {programmingLanguages.map((language) => (\n            <button\n              key={language.name}\n              onClick={() => handleLanguageClick(language.name)}\n              style={{\n                marginRight: \"10px\",\n                marginBottom: \"10px\",\n                backgroundColor: selectedLanguages.includes(language.name)\n                  ? \"lightblue\"\n                  : \"#ccc\",\n                color: \"#fff\",\n              }}\n            >\n              {language.name}\n            </button>\n          ))}\n        </div>\n\n        {selectedLanguages.map((selectedLanguage) => {\n          const language = programmingLanguages.find(\n            (lang) => lang.name === selectedLanguage\n          );\n\n          return (\n            <div key={selectedLanguage}>\n              <h3>Frameworks for {selectedLanguage}</h3>\n              {language.frameworks.map((framework) => (\n                <button\n                  key={framework.name}\n                  onClick={() => handleFrameworkClick(framework.name)}\n                  style={{\n                    marginRight: \"10px\",\n                    marginBottom: \"10px\",\n                    backgroundColor: selectedFrameworks.includes(framework.name)\n                      ? \"lightblue\"\n                      : \"#ccc\",\n                    color: \"#fff\",\n                  }}\n                >\n                  {framework.name}\n                </button>\n              ))}\n            </div>\n          );\n        })}\n\n        {/* Display selected versions */}\n        {selectedFrameworks.map((selectedFramework) => {\n          const language = programmingLanguages.find((lang) =>\n            lang.frameworks.some((fw) => fw.name === selectedFramework)\n          );\n          const framework = language.frameworks.find(\n            (fw) => fw.name === selectedFramework\n          );\n\n          return (\n            <div key={selectedFramework}>\n              <h3>Versions for {selectedFramework}</h3>\n              {framework.versions.map((version) => (\n                <button\n                  key={version}\n                  onClick={() => handleVersionClick(version)}\n                  style={{\n                    marginRight: \"10px\",\n                    marginBottom: \"10px\",\n                    backgroundColor: selectedVersions.includes(version)\n                      ? \"lightblue\"\n                      : \"#ccc\",\n                    color: \"#fff\",\n                  }}\n                >\n                  {version}\n                </button>\n              ))}\n            </div>\n          );\n        })}\n\n        {/* Display selected libraries */}\n        {selectedFrameworks.map((selectedFramework) => {\n          const language = programmingLanguages.find((lang) =>\n            lang.frameworks.some((fw) => fw.name === selectedFramework)\n          );\n          const framework = language.frameworks.find(\n            (fw) => fw.name === selectedFramework\n          );\n\n          return (\n            <div key={selectedFramework}>\n              <h3>Libraries for {selectedFramework}</h3>\n              {framework.libraries.map((library) => (\n                <button\n                  key={library}\n                  onClick={() => handleLibraryClick(library)}\n                  style={{\n                    marginRight: \"10px\",\n                    marginBottom: \"10px\",\n                    backgroundColor: selectedLibraries.includes(library)\n                      ? \"lightblue\"\n                      : \"#ccc\",\n                    color: \"#fff\",\n                  }}\n                >\n                  {library}\n                </button>\n              ))}\n            </div>\n          );\n        })}\n\n        {/* Add button to generate and download files */}\n        <button\n          type=\"button\"\n          onClick={generateAndDownloadFiles}\n          disabled={loading}\n        >\n          Generate & Download Files\n        </button>\n      </form>\n      <p className=\"response-area\">{loading ? \"loading...\" : response}</p>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACU,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACc,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMwB,sBAAsB,GAAIC,OAAO,IAAK;IAC1CR,kBAAkB,CAACQ,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMC,cAAc,GAAG,MAAM;IAC3BnB,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE,EAAE,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMqB,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,aAAa,GAAG,CAAC,GAAGvB,MAAM,CAAC;IACjCuB,aAAa,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC9BrB,SAAS,CAACsB,aAAa,CAAC;EAC1B,CAAC;EAED,MAAME,iBAAiB,GAAG,CAACH,KAAK,EAAEI,KAAK,KAAK;IAC1C,MAAMH,aAAa,GAAG,CAAC,GAAGvB,MAAM,CAAC;IACjCuB,aAAa,CAACD,KAAK,CAAC,GAAGI,KAAK;IAC5BzB,SAAS,CAACsB,aAAa,CAAC;EAC1B,CAAC;EAED,MAAMI,mBAAmB,GAAIC,QAAQ,IAAK;IACxC,IAAI1B,iBAAiB,CAAC2B,QAAQ,CAACD,QAAQ,CAAC,EAAE;MACxCzB,oBAAoB,CAClBD,iBAAiB,CAAC4B,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKH,QAAQ,CAAC,CACtD;MACDvB,qBAAqB,CAAC,EAAE,CAAC;MACzBE,mBAAmB,CAAC,EAAE,CAAC;MACvBE,oBAAoB,CAAC,EAAE,CAAC;IAE1B,CAAC,MAAM;MACLN,oBAAoB,CAAC,CAAC,GAAGD,iBAAiB,EAAE0B,QAAQ,CAAC,CAAC;IACxD;EACF,CAAC;EAED,MAAMI,oBAAoB,GAAIC,SAAS,IAAK;IAC1C,IAAI7B,kBAAkB,CAACyB,QAAQ,CAACI,SAAS,CAAC,EAAE;MAC1C5B,qBAAqB,CACnBD,kBAAkB,CAAC0B,MAAM,CAAEI,EAAE,IAAKA,EAAE,KAAKD,SAAS,CAAC,CACpD;MACD1B,mBAAmB,CAAC,EAAE,CAAC;MACvBE,oBAAoB,CAAC,EAAE,CAAC;IAC1B,CAAC,MAAM;MACLJ,qBAAqB,CAAC,CAAC,GAAGD,kBAAkB,EAAE6B,SAAS,CAAC,CAAC;IAE3D;EACF,CAAC;EAED,MAAME,kBAAkB,GAAIC,OAAO,IAAK;IACtC,IAAI9B,gBAAgB,CAACuB,QAAQ,CAACO,OAAO,CAAC,EAAE;MACtC7B,mBAAmB,CAACD,gBAAgB,CAACwB,MAAM,CAAEO,GAAG,IAAKA,GAAG,KAAKD,OAAO,CAAC,CAAC;IACxE,CAAC,MAAM;MACL7B,mBAAmB,CAAC,CAAC,GAAGD,gBAAgB,EAAE8B,OAAO,CAAC,CAAC;IACrD;EACF,CAAC;EAED,MAAME,kBAAkB,GAAIC,OAAO,IAAK;IACtC,IAAI/B,iBAAiB,CAACqB,QAAQ,CAACU,OAAO,CAAC,EAAE;MACvC9B,oBAAoB,CAACD,iBAAiB,CAACsB,MAAM,CAAEU,GAAG,IAAKA,GAAG,KAAKD,OAAO,CAAC,CAAC;IAC1E,CAAC,MAAM;MACL9B,oBAAoB,CAAC,CAAC,GAAGD,iBAAiB,EAAE+B,OAAO,CAAC,CAAC;IACvD;EACF,CAAC;EAED,MAAME,wBAAwB,GAAG,MAAOC,CAAC,IAAK;IAC5CA,CAAC,CAACC,cAAc,EAAE;IAClB1B,UAAU,CAAC,IAAI,CAAC;IAEhB2B,iBAAiB,EAAE;IAEnB,IAAI;MACF,MAAMC,UAAU,GAAG,iBAAiB;MACpC,MAAMC,KAAK,GAAG,EAAE;;MAEhB;MACA,MAAMC,WAAW,GAAI,4CAA2CrC,eAAgB,0BAAyBV,MAAM,CAACgD,KAAK,CAAC,CAAC,CAAE,iEAAgEhD,MAAM,CAACgD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAE,OAAM/C,iBAAiB,CAAC+C,IAAI,CAAC,IAAI,CAAE,UAAS7C,kBAAkB,CAAC6C,IAAI,CAAC,IAAI,CAAE,SAAQ3C,gBAAgB,CAAC2C,IAAI,CAAC,IAAI,CAAE,QAAOzC,iBAAiB,CAACyC,IAAI,CAAC,IAAI,CAAE,opBAAmpB;;MAEz/B;MACA,MAAMnC,QAAQ,GAAG,MAAMnB,KAAK,CAACuD,IAAI,CAAC,4BAA4B,EAAE;QAAEtC,MAAM,EAAEmC;MAAY,CAAC,CAAC;;MAExF;MACAD,KAAK,CAACK,IAAI,CAAC;QAAEC,IAAI,EAAE,UAAU;QAAEC,IAAI,EAAEvC,QAAQ,CAACwC;MAAK,CAAC,CAAC;MAErD,MAAMC,GAAG,GAAG,IAAIzD,KAAK,EAAE;MACvB,MAAM0D,MAAM,GAAGD,GAAG,CAACC,MAAM,CAACX,UAAU,CAAC;MAErC,MAAMY,UAAU,GAAG,CAACD,MAAM,EAAEE,QAAQ,EAAEL,IAAI,KAAK;QAC7CG,MAAM,CAACG,IAAI,CAACD,QAAQ,EAAEL,IAAI,CAAC;MAC7B,CAAC;MAEDP,KAAK,CAACc,OAAO,CAAED,IAAI,IAAK;QACtB,MAAMD,QAAQ,GAAI,GAAEC,IAAI,CAACP,IAAK,EAAC;QAC/BK,UAAU,CAACD,MAAM,EAAEE,QAAQ,EAAEC,IAAI,CAACN,IAAI,CAAC;MACzC,CAAC,CAAC;MAEF,MAAMQ,OAAO,GAAG,MAAMN,GAAG,CAACO,aAAa,CAAC;QAAEC,IAAI,EAAE;MAAO,CAAC,CAAC;MACzD,MAAMC,eAAe,GAAGC,GAAG,CAACC,eAAe,CAACL,OAAO,CAAC;MAEpD,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGN,eAAe;MAC3BG,IAAI,CAACI,QAAQ,GAAI,GAAE1B,UAAW,MAAK;MACnCsB,IAAI,CAACK,KAAK,EAAE;MAEZzD,WAAW,CAAC,qDAAqD,CAAC;IACpE,CAAC,CAAC,OAAO0D,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;IAEAxD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAGD,MAAM2D,oBAAoB,GAAG,CAC3B;IACExB,IAAI,EAAE,YAAY;IAClByB,UAAU,EAAE,CACV;MACEzB,IAAI,EAAE,OAAO;MACb0B,QAAQ,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;MAC/BC,SAAS,EAAE,CAAC,WAAW,EAAE,OAAO;IAClC,CAAC,EACD;MACE3B,IAAI,EAAE,SAAS;MACf0B,QAAQ,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;MAC/BC,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM;IAC5B,CAAC;EAEL,CAAC,EACD;IACE3B,IAAI,EAAE,QAAQ;IACdyB,UAAU,EAAE,CACV;MACEzB,IAAI,EAAE,QAAQ;MACd0B,QAAQ,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC;MAC7BC,SAAS,EAAE,CAAC,uBAAuB,EAAE,QAAQ;IAC/C,CAAC,EACD;MACE3B,IAAI,EAAE,OAAO;MACb0B,QAAQ,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MAC5BC,SAAS,EAAE,CAAC,eAAe,EAAE,YAAY;IAC3C,CAAC;EAEL,CAAC,EACD;IACE3B,IAAI,EAAE,MAAM;IACZyB,UAAU,EAAE,CACV;MACEzB,IAAI,EAAE,aAAa;MACnB0B,QAAQ,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;MAC5BC,SAAS,EAAE,CAAC,iBAAiB,EAAE,iBAAiB;IAClD,CAAC,EACD;MACE3B,IAAI,EAAE,WAAW;MACjB0B,QAAQ,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC;MAC7BC,SAAS,EAAE,CAAC,4BAA4B,EAAE,MAAM;IAClD,CAAC;EAEL,CAAC,CACF;EAED,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB;MAAK,GAAG,EAAElF,OAAQ;MAAC,GAAG,EAAC,EAAE;MAAC,SAAS,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACjD;MAAM,QAAQ,EAAEmF,IAAK;MAAA,wBACnB;QAAA,wBACE;UACE,GAAG,EAAEpF,MAAO;UACZ,GAAG,EAAC,EAAE;UACN,SAAS,EAAEoB,OAAO,GAAG,iBAAiB,GAAG;QAAU;UAAA;UAAA;UAAA;QAAA,QACnD,eACF;UACE,KAAK,EAAE;YAAEiE,KAAK,EAAE;UAAS,CAAE;UAC3B,KAAK,EAAEvE,eAAgB;UACvB,QAAQ,EAAGgC,CAAC,IAAKxB,sBAAsB,CAACwB,CAAC,CAACwC,MAAM,CAACxD,KAAK,CAAE;UAAA,wBAExD;YAAQ,KAAK,EAAC,EAAE;YAAA,UAAC;UAAgB;YAAA;YAAA;YAAA;UAAA,QAAS,eAC1C;YAAQ,KAAK,EAAC,qBAAqB;YAAA,UAAC;UAAmB;YAAA;YAAA;YAAA;UAAA,QAAS,eAChE;YAAQ,KAAK,EAAC,oBAAoB;YAAA,UAAC;UAAkB;YAAA;YAAA;YAAA;UAAA,QAAS,eAC9D;YAAQ,KAAK,EAAC,sBAAsB;YAAA,UAAC;UAAoB;YAAA;YAAA;YAAA;UAAA,QAAS,eAClE;YAAQ,KAAK,EAAC,sBAAsB;YAAA,UAAC;UAAoB;YAAA;YAAA;YAAA;UAAA,QAAS,eAClE;YAAQ,KAAK,EAAC,gBAAgB;YAAA,UAAC;UAAc;YAAA;YAAA;YAAA;UAAA,QAAS,eACtD;YAAQ,KAAK,EAAC,iBAAiB;YAAA,UAAC;UAAe;YAAA;YAAA;YAAA;UAAA,QAAS,eACxD;YAAQ,KAAK,EAAC,iCAAiC;YAAA,UAAC;UAEhD;YAAA;YAAA;YAAA;UAAA,QAAS,eACT;YAAQ,KAAK,EAAC,iBAAiB;YAAA,UAAC;UAAe;YAAA;YAAA;YAAA;UAAA,QAAS,eACxD;YAAQ,KAAK,EAAC,eAAe;YAAA,UAAC;UAAa;YAAA;YAAA;YAAA;UAAA,QAAS,eACpD;YAAQ,KAAK,EAAC,2BAA2B;YAAA,UAAC;UAE1C;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACF,eAET;UAAK,KAAK,EAAE;YAAEyD,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAS,CAAE;UAAA,uBACpD;YACE,IAAI,EAAC,MAAM;YACX,KAAK,EAAEpF,MAAM,CAAC,CAAC,CAAC,IAAI,EAAG;YACvB,WAAW,EAAC,wBAAwB;YACpC,QAAQ,EAAG0C,CAAC,IAAKjB,iBAAiB,CAAC,CAAC,EAAEiB,CAAC,CAACwC,MAAM,CAACxD,KAAK,CAAE;YACtD,KAAK,EAAE;cAAE2D,WAAW,EAAE;YAAO;UAAE;YAAA;YAAA;YAAA;UAAA;QAC/B;UAAA;UAAA;UAAA;QAAA,QACE,EAELrF,MAAM,CAACgD,KAAK,CAAC,CAAC,CAAC,CAACsC,GAAG,CAAC,CAACC,KAAK,EAAEjE,KAAK,kBAChC;UAEE,KAAK,EAAE;YAAE6D,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAS,CAAE;UAAA,wBAEjD;YACE,IAAI,EAAC,MAAM;YACX,KAAK,EAAEG,KAAM;YACb,WAAW,EAAC,qBAAqB;YACjC,QAAQ,EAAG7C,CAAC,IAAKjB,iBAAiB,CAACH,KAAK,GAAG,CAAC,EAAEoB,CAAC,CAACwC,MAAM,CAACxD,KAAK,CAAE;YAC9D,KAAK,EAAE;cAAE2D,WAAW,EAAE;YAAO;UAAE;YAAA;YAAA;YAAA;UAAA,QAC/B,eACF;YAAQ,OAAO,EAAE,MAAMhE,iBAAiB,CAACC,KAAK,GAAG,CAAC,CAAE;YAAA,UAAC;UAErD;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA,GAZJA,KAAK,GAAG,CAAC;UAAA;UAAA;UAAA;QAAA,QAcjB,CAAC,eAEF;UAAQ,OAAO,EAAEF,cAAe;UAAA,UAAC;QAAmB;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACzD,eAEN;QAAA,wBAEE;UAAA,UAAI;QAAqB;UAAA;UAAA;UAAA;QAAA,QAAK,EAC7BwD,oBAAoB,CAACU,GAAG,CAAE1D,QAAQ,iBACjC;UAEE,OAAO,EAAE,MAAMD,mBAAmB,CAACC,QAAQ,CAACwB,IAAI,CAAE;UAClD,KAAK,EAAE;YACLiC,WAAW,EAAE,MAAM;YACnBG,YAAY,EAAE,MAAM;YACpBC,eAAe,EAAEvF,iBAAiB,CAAC2B,QAAQ,CAACD,QAAQ,CAACwB,IAAI,CAAC,GACtD,WAAW,GACX,MAAM;YACVsC,KAAK,EAAE;UACT,CAAE;UAAA,UAED9D,QAAQ,CAACwB;QAAI,GAXTxB,QAAQ,CAACwB,IAAI;UAAA;UAAA;UAAA;QAAA,QAarB,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,EAELlD,iBAAiB,CAACoF,GAAG,CAAEK,gBAAgB,IAAK;QAC3C,MAAM/D,QAAQ,GAAGgD,oBAAoB,CAACgB,IAAI,CACvC7D,IAAI,IAAKA,IAAI,CAACqB,IAAI,KAAKuC,gBAAgB,CACzC;QAED,oBACE;UAAA,wBACE;YAAA,WAAI,iBAAe,EAACA,gBAAgB;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM,EACzC/D,QAAQ,CAACiD,UAAU,CAACS,GAAG,CAAErD,SAAS,iBACjC;YAEE,OAAO,EAAE,MAAMD,oBAAoB,CAACC,SAAS,CAACmB,IAAI,CAAE;YACpD,KAAK,EAAE;cACLiC,WAAW,EAAE,MAAM;cACnBG,YAAY,EAAE,MAAM;cACpBC,eAAe,EAAErF,kBAAkB,CAACyB,QAAQ,CAACI,SAAS,CAACmB,IAAI,CAAC,GACxD,WAAW,GACX,MAAM;cACVsC,KAAK,EAAE;YACT,CAAE;YAAA,UAEDzD,SAAS,CAACmB;UAAI,GAXVnB,SAAS,CAACmB,IAAI;YAAA;YAAA;YAAA;UAAA,QAatB,CAAC;QAAA,GAjBMuC,gBAAgB;UAAA;UAAA;UAAA;QAAA,QAkBpB;MAEV,CAAC,CAAC,EAGDvF,kBAAkB,CAACkF,GAAG,CAAEO,iBAAiB,IAAK;QAC7C,MAAMjE,QAAQ,GAAGgD,oBAAoB,CAACgB,IAAI,CAAE7D,IAAI,IAC9CA,IAAI,CAAC8C,UAAU,CAACiB,IAAI,CAAE5D,EAAE,IAAKA,EAAE,CAACkB,IAAI,KAAKyC,iBAAiB,CAAC,CAC5D;QACD,MAAM5D,SAAS,GAAGL,QAAQ,CAACiD,UAAU,CAACe,IAAI,CACvC1D,EAAE,IAAKA,EAAE,CAACkB,IAAI,KAAKyC,iBAAiB,CACtC;QAED,oBACE;UAAA,wBACE;YAAA,WAAI,eAAa,EAACA,iBAAiB;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM,EACxC5D,SAAS,CAAC6C,QAAQ,CAACQ,GAAG,CAAElD,OAAO,iBAC9B;YAEE,OAAO,EAAE,MAAMD,kBAAkB,CAACC,OAAO,CAAE;YAC3C,KAAK,EAAE;cACLiD,WAAW,EAAE,MAAM;cACnBG,YAAY,EAAE,MAAM;cACpBC,eAAe,EAAEnF,gBAAgB,CAACuB,QAAQ,CAACO,OAAO,CAAC,GAC/C,WAAW,GACX,MAAM;cACVsD,KAAK,EAAE;YACT,CAAE;YAAA,UAEDtD;UAAO,GAXHA,OAAO;YAAA;YAAA;YAAA;UAAA,QAaf,CAAC;QAAA,GAjBMyD,iBAAiB;UAAA;UAAA;UAAA;QAAA,QAkBrB;MAEV,CAAC,CAAC,EAGDzF,kBAAkB,CAACkF,GAAG,CAAEO,iBAAiB,IAAK;QAC7C,MAAMjE,QAAQ,GAAGgD,oBAAoB,CAACgB,IAAI,CAAE7D,IAAI,IAC9CA,IAAI,CAAC8C,UAAU,CAACiB,IAAI,CAAE5D,EAAE,IAAKA,EAAE,CAACkB,IAAI,KAAKyC,iBAAiB,CAAC,CAC5D;QACD,MAAM5D,SAAS,GAAGL,QAAQ,CAACiD,UAAU,CAACe,IAAI,CACvC1D,EAAE,IAAKA,EAAE,CAACkB,IAAI,KAAKyC,iBAAiB,CACtC;QAED,oBACE;UAAA,wBACE;YAAA,WAAI,gBAAc,EAACA,iBAAiB;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM,EACzC5D,SAAS,CAAC8C,SAAS,CAACO,GAAG,CAAE/C,OAAO,iBAC/B;YAEE,OAAO,EAAE,MAAMD,kBAAkB,CAACC,OAAO,CAAE;YAC3C,KAAK,EAAE;cACL8C,WAAW,EAAE,MAAM;cACnBG,YAAY,EAAE,MAAM;cACpBC,eAAe,EAAEjF,iBAAiB,CAACqB,QAAQ,CAACU,OAAO,CAAC,GAChD,WAAW,GACX,MAAM;cACVmD,KAAK,EAAE;YACT,CAAE;YAAA,UAEDnD;UAAO,GAXHA,OAAO;YAAA;YAAA;YAAA;UAAA,QAaf,CAAC;QAAA,GAjBMsD,iBAAiB;UAAA;UAAA;UAAA;QAAA,QAkBrB;MAEV,CAAC,CAAC,eAGF;QACE,IAAI,EAAC,QAAQ;QACb,OAAO,EAAEpD,wBAAyB;QAClC,QAAQ,EAAEzB,OAAQ;QAAA,UACnB;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACP;MAAG,SAAS,EAAC,eAAe;MAAA,UAAEA,OAAO,GAAG,YAAY,GAAGF;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAChE;AAEV,CAAC;AAAC,GAxWIf,GAAG;AAAA,KAAHA,GAAG;AA0WT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
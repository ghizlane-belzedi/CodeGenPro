{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rayze\\\\Downloads\\\\chatgpt-react-js-main (1)\\\\chatgpt-react-js-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport CGLogo from './chatGPT.png';\nimport AppLogo from './app-logo.png';\nimport './App.css';\nimport JSZip from 'jszip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputs, setInputs] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedVersions, setSelectedVersions] = useState([]);\n  const [selectedLibraries, setSelectedLibraries] = useState([]);\n  const [selectedProfile, setSelectedProfile] = useState(\"\");\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleProfileSelection = profile => {\n    setSelectedProfile(profile);\n  };\n  const handleAddInput = () => {\n    setInputs([...inputs, \"\"]);\n  };\n  const handleDeleteInput = index => {\n    const updatedInputs = [...inputs];\n    updatedInputs.splice(index, 1);\n    setInputs(updatedInputs);\n  };\n  const handleInputChange = (index, value) => {\n    const updatedInputs = [...inputs];\n    updatedInputs[index] = value;\n    setInputs(updatedInputs);\n  };\n  const handleLanguageClick = language => {\n    if (selectedLanguages.includes(language)) {\n      setSelectedLanguages(selectedLanguages.filter(lang => lang !== language));\n      setSelectedFrameworks([]);\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n  const handleFrameworkClick = framework => {\n    if (selectedFrameworks.includes(framework)) {\n      setSelectedFrameworks(selectedFrameworks.filter(fw => fw !== framework));\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedFrameworks([...selectedFrameworks, framework]);\n    }\n  };\n  const handleVersionClick = version => {\n    if (selectedVersions.includes(version)) {\n      setSelectedVersions(selectedVersions.filter(ver => ver !== version));\n    } else {\n      setSelectedVersions([...selectedVersions, version]);\n    }\n  };\n  const handleLibraryClick = library => {\n    if (selectedLibraries.includes(library)) {\n      setSelectedLibraries(selectedLibraries.filter(lib => lib !== library));\n    } else {\n      setSelectedLibraries([...selectedLibraries, library]);\n    }\n  };\n  const updatePromptValue = () => {\n    /*prompt jibiha mn  txt dyal ghizlane*/\n    const promptValue = `Act as a highly experienced and seasoned :${selectedProfile} in the field .Build a: ${inputs.slice(0)}. Your goal is to generate a code handling the following tasks: ${inputs.slice(1).join(', ')} in: ${selectedLanguages.join(', ')} using: ${selectedFrameworks.join(', ')} with :${selectedVersions.join(', ')} and ${selectedLibraries.join(', ')}.\nThen, act as a bug detecter and  review your code for security vulnerabilities and locate any logic errors or resource leaks and add the fixes needed.\nThen, act as a code reviewer and analyze the hole previous provided code for code smells and assess the test coverage and Add improvements to your code .\nThen, act as a bug detecter and  review my code for security vulnerabilities and locate any logic errors and add the fixes needed.\nResponses should not be translations of my input, but a code written in the language I specified. Do not write explanations on your reply. Keep in mind that it is important to be concise, specific, and straight to the point.`;\n    setPrompt(promptValue);\n  };\n  const generateCodeFiles = async () => {\n    try {\n      const res = await axios.post('http://localhost:5555/chat', {\n        prompt\n      });\n      return res.data;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const createFile = (folder, fileName, code) => {\n    folder.file(fileName, code);\n  };\n  const generateAndDownloadFiles = async () => {\n    setLoading(true);\n    updatePromptValue();\n    try {\n      const code = await generateCodeFiles();\n      const folderName = 'GeneratedFolder';\n      const files = [{\n        name: 'file1.js',\n        code: code\n      }\n      // Add more files here if needed\n      ];\n\n      const zip = new JSZip();\n      const folder = zip.folder(folderName);\n      files.forEach(file => {\n        const fileName = `${file.name}.${selectedLanguages[0]}`;\n        createFile(folder, fileName, file.code);\n      });\n      const zipBlob = await zip.generateAsync({\n        type: 'blob'\n      });\n      const zipDownloadLink = URL.createObjectURL(zipBlob);\n      const link = document.createElement('a');\n      link.href = zipDownloadLink;\n      link.download = `${folderName}.zip`;\n      link.click();\n      setResponse('Project files received. Click the link to download.');\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    generateAndDownloadFiles();\n  };\n  const programmingLanguages = [{\n    name: \"JavaScript\",\n    frameworks: [{\n      name: \"React\",\n      versions: [\"17.0.2\", \"16.13.1\"],\n      libraries: [\"React-DOM\", \"Redux\"]\n    }, {\n      name: \"Angular\",\n      versions: [\"12.0.0\", \"11.2.14\"],\n      libraries: [\"RxJS\", \"NgRx\"]\n    }]\n  }, {\n    name: \"Python\",\n    frameworks: [{\n      name: \"Django\",\n      versions: [\"3.2.4\", \"2.2.24\"],\n      libraries: [\"Django REST Framework\", \"Celery\"]\n    }, {\n      name: \"Flask\",\n      versions: [\"2.0.1\", \"1.1.4\"],\n      libraries: [\"Flask-RESTful\", \"SQLAlchemy\"]\n    }]\n  }, {\n    name: \"Java\",\n    frameworks: [{\n      name: \"Spring Boot\",\n      versions: [\"2.5.0\", \"2.4.6\"],\n      libraries: [\"Spring Data JPA\", \"Spring Security\"]\n    }, {\n      name: \"Hibernate\",\n      versions: [\"5.5.3\", \"5.4.31\"],\n      libraries: [\"Java Persistence API (JPA)\", \"C3P0\"]\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: AppLogo,\n      alt: \"\",\n      className: \"app-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CGLogo,\n          alt: \"\",\n          className: loading ? 'cg-logo loading' : 'cg-logo'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            width: \"1300px\"\n          },\n          value: selectedProfile,\n          onChange: e => handleProfileSelection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Front-end Developer\",\n            children: \"Front-end Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Back-end Developer\",\n            children: \"Back-end Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Full-stack Developer\",\n            children: \"Full-stack Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mobile App Developer\",\n            children: \"Mobile App Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Game Developer\",\n            children: \"Game Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DevOps Engineer\",\n            children: \"DevOps Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Quality Assurance (QA) Engineer\",\n            children: \"Quality Assurance (QA) Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"UI/UX Developer\",\n            children: \"UI/UX Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Data Engineer\",\n            children: \"Data Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Machine Learning Engineer\",\n            children: \"Machine Learning Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputs[0] || \"\",\n            placeholder: \"Provide your Main Task\",\n            onChange: e => handleInputChange(0, e.target.value),\n            style: {\n              marginRight: \"65px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this), inputs.slice(1).map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            placeholder: \"Add a functionality\",\n            onChange: e => handleInputChange(index + 1, e.target.value),\n            style: {\n              marginRight: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteInput(index + 1),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 11\n          }, this)]\n        }, index + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddInput,\n          children: \"Add a functionality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Programming Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }, this), programmingLanguages.map(language => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLanguageClick(language.name),\n          style: {\n            marginRight: \"10px\",\n            marginBottom: \"10px\",\n            backgroundColor: selectedLanguages.includes(language.name) ? \"lightblue\" : \"#ccc\",\n            color: \"#fff\"\n          },\n          children: language.name\n        }, language.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }, this), selectedLanguages.map(selectedLanguage => {\n        const language = programmingLanguages.find(lang => lang.name === selectedLanguage);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Frameworks for \", selectedLanguage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), language.frameworks.map(framework => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFrameworkClick(framework.name),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedFrameworks.includes(framework.name) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: framework.name\n          }, framework.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this))]\n        }, selectedLanguage, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this);\n      }), selectedFrameworks.map(selectedFramework => {\n        const language = programmingLanguages.find(lang => lang.frameworks.some(fw => fw.name === selectedFramework));\n        const framework = language.frameworks.find(fw => fw.name === selectedFramework);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Versions for \", selectedFramework]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), framework.versions.map(version => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVersionClick(version),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedVersions.includes(version) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: version\n          }, version, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this))]\n        }, selectedFramework, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this);\n      }), selectedFrameworks.map(selectedFramework => {\n        const language = programmingLanguages.find(lang => lang.frameworks.some(fw => fw.name === selectedFramework));\n        const framework = language.frameworks.find(fw => fw.name === selectedFramework);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Libraries for \", selectedFramework]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), framework.libraries.map(library => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLibraryClick(library),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedLibraries.includes(library) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: library\n          }, library, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this))]\n        }, selectedFramework, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \" Generate and Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"response-area\",\n      children: loading ? 'loading...' : response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Uj3Q9GizdRFM8HUxWSlh/x4FNX4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","CGLogo","AppLogo","JSZip","App","inputs","setInputs","selectedLanguages","setSelectedLanguages","selectedFrameworks","setSelectedFrameworks","selectedVersions","setSelectedVersions","selectedLibraries","setSelectedLibraries","selectedProfile","setSelectedProfile","prompt","setPrompt","response","setResponse","loading","setLoading","handleProfileSelection","profile","handleAddInput","handleDeleteInput","index","updatedInputs","splice","handleInputChange","value","handleLanguageClick","language","includes","filter","lang","handleFrameworkClick","framework","fw","handleVersionClick","version","ver","handleLibraryClick","library","lib","updatePromptValue","promptValue","slice","join","generateCodeFiles","res","post","data","err","console","error","createFile","folder","fileName","code","file","generateAndDownloadFiles","folderName","files","name","zip","forEach","zipBlob","generateAsync","type","zipDownloadLink","URL","createObjectURL","link","document","createElement","href","download","click","handleSubmit","e","preventDefault","programmingLanguages","frameworks","versions","libraries","width","target","display","alignItems","marginRight","map","input","marginBottom","backgroundColor","color","selectedLanguage","find","selectedFramework","some"],"sources":["C:/Users/rayze/Downloads/chatgpt-react-js-main (1)/chatgpt-react-js-main/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport CGLogo from './chatGPT.png';\nimport AppLogo from './app-logo.png';\nimport './App.css';\nimport JSZip from 'jszip';\n\nconst App = () => {\n  const [inputs, setInputs] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedVersions, setSelectedVersions] = useState([]);\n  const [selectedLibraries, setSelectedLibraries] = useState([]);\n  const [selectedProfile, setSelectedProfile] = useState(\"\");\n\n  const [prompt, setPrompt] = useState('');\n\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n\n\n  const handleProfileSelection = (profile) => {\n    setSelectedProfile(profile);\n  };\n\n\n  const handleAddInput = () => {\n    setInputs([...inputs, \"\"]);\n  };\n\n  const handleDeleteInput = (index) => {\n    const updatedInputs = [...inputs];\n    updatedInputs.splice(index, 1);\n    setInputs(updatedInputs);\n  };\n\n  const handleInputChange = (index, value) => {\n    const updatedInputs = [...inputs];\n    updatedInputs[index] = value;\n    setInputs(updatedInputs);\n  };\n\n  const handleLanguageClick = (language) => {\n    if (selectedLanguages.includes(language)) {\n      setSelectedLanguages(\n        selectedLanguages.filter((lang) => lang !== language)\n      );\n      setSelectedFrameworks([]);\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n\n  const handleFrameworkClick = (framework) => {\n    if (selectedFrameworks.includes(framework)) {\n      setSelectedFrameworks(\n        selectedFrameworks.filter((fw) => fw !== framework)\n      );\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedFrameworks([...selectedFrameworks, framework]);\n    }\n  };\n\n  const handleVersionClick = (version) => {\n    if (selectedVersions.includes(version)) {\n      setSelectedVersions(selectedVersions.filter((ver) => ver !== version));\n    } else {\n      setSelectedVersions([...selectedVersions, version]);\n    }\n  };\n\n  const handleLibraryClick = (library) => {\n    if (selectedLibraries.includes(library)) {\n      setSelectedLibraries(selectedLibraries.filter((lib) => lib !== library));\n    } else {\n      setSelectedLibraries([...selectedLibraries, library]);\n    }\n  };\n\n  const updatePromptValue = () => {\n    /*prompt jibiha mn  txt dyal ghizlane*/\n    const promptValue = `Act as a highly experienced and seasoned :${selectedProfile} in the field .Build a: ${inputs.slice(0)}. Your goal is to generate a code handling the following tasks: ${inputs.slice(1).join(', ')} in: ${selectedLanguages.join(', ')} using: ${selectedFrameworks.join(', ')} with :${selectedVersions.join(', ')} and ${selectedLibraries.join(', ')}.\nThen, act as a bug detecter and  review your code for security vulnerabilities and locate any logic errors or resource leaks and add the fixes needed.\nThen, act as a code reviewer and analyze the hole previous provided code for code smells and assess the test coverage and Add improvements to your code .\nThen, act as a bug detecter and  review my code for security vulnerabilities and locate any logic errors and add the fixes needed.\nResponses should not be translations of my input, but a code written in the language I specified. Do not write explanations on your reply. Keep in mind that it is important to be concise, specific, and straight to the point.`;\n    setPrompt(promptValue);\n  };\n \n  const generateCodeFiles = async () => {\n    try {\n      const res = await axios.post('http://localhost:5555/chat', { prompt });\n      return res.data;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const createFile = (folder, fileName, code) => {\n    folder.file(fileName, code);\n  };\n\n  const generateAndDownloadFiles = async () => {\n    setLoading(true);\n    updatePromptValue();\n  \n    try {\n      const code = await generateCodeFiles();\n      const folderName = 'GeneratedFolder';\n      const files = [\n        { name: 'file1.js', code: code },\n        // Add more files here if needed\n      ];\n  \n      const zip = new JSZip();\n      const folder = zip.folder(folderName);\n  \n      files.forEach((file) => {\n        const fileName = `${file.name}.${selectedLanguages[0]}`;\n        createFile(folder, fileName, file.code);\n      });\n  \n      const zipBlob = await zip.generateAsync({ type: 'blob' });\n      const zipDownloadLink = URL.createObjectURL(zipBlob);\n  \n      const link = document.createElement('a');\n      link.href = zipDownloadLink;\n      link.download = `${folderName}.zip`;\n      link.click();\n  \n      setResponse('Project files received. Click the link to download.');\n    } catch (err) {\n      console.error(err);\n    }\n  \n    setLoading(false);\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    generateAndDownloadFiles();\n  };\n  const programmingLanguages = [\n    {\n      name: \"JavaScript\",\n      frameworks: [\n        {\n          name: \"React\",\n          versions: [\"17.0.2\", \"16.13.1\"],\n          libraries: [\"React-DOM\", \"Redux\"],\n        },\n        {\n          name: \"Angular\",\n          versions: [\"12.0.0\", \"11.2.14\"],\n          libraries: [\"RxJS\", \"NgRx\"],\n        },\n      ],\n    },\n    {\n      name: \"Python\",\n      frameworks: [\n        {\n          name: \"Django\",\n          versions: [\"3.2.4\", \"2.2.24\"],\n          libraries: [\"Django REST Framework\", \"Celery\"],\n        },\n        {\n          name: \"Flask\",\n          versions: [\"2.0.1\", \"1.1.4\"],\n          libraries: [\"Flask-RESTful\", \"SQLAlchemy\"],\n        },\n      ],\n    },\n    {\n      name: \"Java\",\n      frameworks: [\n        {\n          name: \"Spring Boot\",\n          versions: [\"2.5.0\", \"2.4.6\"],\n          libraries: [\"Spring Data JPA\", \"Spring Security\"],\n        },\n        {\n          name: \"Hibernate\",\n          versions: [\"5.5.3\", \"5.4.31\"],\n          libraries: [\"Java Persistence API (JPA)\", \"C3P0\"],\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"wrapper\">\n      <img src={AppLogo} alt=\"\" className=\"app-logo\" />\n      <form onSubmit={handleSubmit}>\n        <div>\n        <img src={CGLogo} alt=\"\" className={loading ? 'cg-logo loading' : 'cg-logo'} />\n        <select\n          style={{ width: \"1300px\" }}\n          value={selectedProfile}\n          onChange={(e) => handleProfileSelection(e.target.value)}\n        >\n          <option value=\"\">Select a profile</option>\n          <option value=\"Front-end Developer\">Front-end Developer</option>\n          <option value=\"Back-end Developer\">Back-end Developer</option>\n          <option value=\"Full-stack Developer\">Full-stack Developer</option>\n          <option value=\"Mobile App Developer\">Mobile App Developer</option>\n          <option value=\"Game Developer\">Game Developer</option>\n          <option value=\"DevOps Engineer\">DevOps Engineer</option>\n          <option value=\"Quality Assurance (QA) Engineer\">\n            Quality Assurance (QA) Engineer\n          </option>\n          <option value=\"UI/UX Developer\">UI/UX Developer</option>\n          <option value=\"Data Engineer\">Data Engineer</option>\n          <option value=\"Machine Learning Engineer\">\n            Machine Learning Engineer\n          </option>\n        </select>\n\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <input\n          type=\"text\"\n          value={inputs[0] || \"\"}\n          placeholder=\"Provide your Main Task\"\n          onChange={(e) => handleInputChange(0, e.target.value)}\n          style={{ marginRight: \"65px\" }}\n        />\n      </div>\n\n      {inputs.slice(1).map((input,index) => (\n        <div key={index + 1} style={{ display: \"flex\", alignItems: \"center\" }}>\n          <input\n            type=\"text\"\n            value={input}\n            placeholder=\"Add a functionality\"\n            onChange={(e) => handleInputChange(index + 1, e.target.value)}\n            style={{ marginRight: \"10px\" }}\n          />\n          <button onClick={() => handleDeleteInput(index + 1)}>Delete</button>\n        </div>\n      ))}\n\n        <button onClick={handleAddInput}>Add a functionality</button>\n      </div>\n    \n      <div>\n        {/* Display programming languages */}\n        <h3>Programming Languages</h3>\n        {programmingLanguages.map((language) => (\n          <button\n            key={language.name}\n            onClick={() => handleLanguageClick(language.name)}\n            style={{\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedLanguages.includes(language.name)\n                ? \"lightblue\"\n                : \"#ccc\",\n              color: \"#fff\",\n            }}\n          >\n            {language.name}\n          </button>\n        ))}\n      </div>\n\n      {selectedLanguages.map((selectedLanguage) => {\n        const language = programmingLanguages.find(\n          (lang) => lang.name === selectedLanguage\n        );\n\n        return (\n          <div key={selectedLanguage}>\n            <h3>Frameworks for {selectedLanguage}</h3>\n            {language.frameworks.map((framework) => (\n              <button\n                key={framework.name}\n                onClick={() => handleFrameworkClick(framework.name)}\n                style={{\n                  marginRight: \"10px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: selectedFrameworks.includes(framework.name)\n                    ? \"lightblue\"\n                    : \"#ccc\",\n                  color: \"#fff\",\n                }}\n              >\n                {framework.name}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n\n      {/* Display selected versions */}\n      {selectedFrameworks.map((selectedFramework) => {\n        const language = programmingLanguages.find((lang) =>\n          lang.frameworks.some((fw) => fw.name === selectedFramework)\n        );\n        const framework = language.frameworks.find(\n          (fw) => fw.name === selectedFramework\n        );\n\n        return (\n          <div key={selectedFramework}>\n            <h3>Versions for {selectedFramework}</h3>\n            {framework.versions.map((version) => (\n              <button\n                key={version}\n                onClick={() => handleVersionClick(version)}\n                style={{\n                  marginRight: \"10px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: selectedVersions.includes(version)\n                    ? \"lightblue\"\n                    : \"#ccc\",\n                  color: \"#fff\",\n                }}\n              >\n                {version}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n\n      {/* Display selected libraries */}\n      {selectedFrameworks.map((selectedFramework) => {\n        const language = programmingLanguages.find((lang) =>\n          lang.frameworks.some((fw) => fw.name === selectedFramework)\n        );\n        const framework = language.frameworks.find(\n          (fw) => fw.name === selectedFramework\n        );\n\n        return (\n          <div key={selectedFramework}>\n            <h3>Libraries for {selectedFramework}</h3>\n            {framework.libraries.map((library) => (\n              <button\n                key={library}\n                onClick={() => handleLibraryClick(library)}\n                style={{\n                  marginRight: \"10px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: selectedLibraries.includes(library)\n                    ? \"lightblue\"\n                    : \"#ccc\",\n                  color: \"#fff\",\n                }}\n              >\n                {library}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n\n<button type=\"submit\" disabled={loading}> Generate and Download</button>\n\n</form>\n<p className=\"response-area\">{loading ? 'loading...' : response}</p>\n     \n   </div>\n \n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
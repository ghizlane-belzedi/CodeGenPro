{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rayze\\\\Downloads\\\\chatgpt-react-js-main (1)\\\\chatgpt-react-js-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport CGLogo from './chatGPT.png';\nimport AppLogo from './app-logo.png';\nimport './App.css';\nimport JSZip from 'jszip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputs, setInputs] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedVersions, setSelectedVersions] = useState([]);\n  const [selectedLibraries, setSelectedLibraries] = useState([]);\n  const [selectedProfile, setSelectedProfile] = useState(\"\");\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleProfileSelection = profile => {\n    setSelectedProfile(profile);\n  };\n  const handleAddInput = () => {\n    setInputs([...inputs, \"\"]);\n  };\n  const handleDeleteInput = index => {\n    const updatedInputs = [...inputs];\n    updatedInputs.splice(index, 1);\n    setInputs(updatedInputs);\n  };\n  const handleInputChange = (index, value) => {\n    const updatedInputs = [...inputs];\n    updatedInputs[index] = value;\n    setInputs(updatedInputs);\n  };\n  const handleLanguageClick = language => {\n    if (selectedLanguages.includes(language)) {\n      setSelectedLanguages(selectedLanguages.filter(lang => lang !== language));\n      setSelectedFrameworks([]);\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n  const handleFrameworkClick = framework => {\n    if (selectedFrameworks.includes(framework)) {\n      setSelectedFrameworks(selectedFrameworks.filter(fw => fw !== framework));\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedFrameworks([...selectedFrameworks, framework]);\n    }\n  };\n  const handleVersionClick = version => {\n    if (selectedVersions.includes(version)) {\n      setSelectedVersions(selectedVersions.filter(ver => ver !== version));\n    } else {\n      setSelectedVersions([...selectedVersions, version]);\n    }\n  };\n  const handleLibraryClick = library => {\n    if (selectedLibraries.includes(library)) {\n      setSelectedLibraries(selectedLibraries.filter(lib => lib !== library));\n    } else {\n      setSelectedLibraries([...selectedLibraries, library]);\n    }\n  };\n  const updatePromptValue = () => {\n    const promptValue = `Act as a highly experienced and seasoned :${selectedProfile} in the field .Build a: ${inputs.slice(0)}. Your goal is to generate a code handling the following tasks: ${inputs.slice(1).join(', ')} in: ${selectedLanguages.join(', ')} using: ${selectedFrameworks.join(', ')} with :${selectedVersions.join(', ')} and ${selectedLibraries.join(', ')}.\nThen, act as a bug detector and review your code for security vulnerabilities and locate any logic errors or resource leaks and add the fixes needed.\nThen, act as a code reviewer and analyze the whole previous provided code for code smells and assess the test coverage and add improvements to your code.\nThen, act as a bug detector and review my code for security vulnerabilities and locate any logic errors and add the fixes needed.\nResponses should not be translations of my input, but code written in the language I specified. Do not write explanations in your reply. Keep in mind that it is important to be concise, specific, and straight to the point.`;\n    setPrompt(promptValue);\n  };\n  const generateCodeFiles = async () => {\n    setLoading(true);\n    setResponse('');\n    try {\n      // Make a POST request to the API endpoint\n      const response = await axios.post('/api/generate-code', {\n        prompt\n      });\n\n      // Check if the response is successful\n      if (response.status === 200) {\n        const {\n          codeFiles\n        } = response.data;\n\n        // Create a zip file using JSZip\n        const zip = new JSZip();\n\n        // Add each code file to the zip\n        codeFiles.forEach(file => {\n          zip.file(file.name, file.content);\n        });\n\n        // Generate the zip file\n        const content = await zip.generateAsync({\n          type: 'blob'\n        });\n\n        // Create a temporary link to download the zip file\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(content);\n        link.download = 'code-files.zip';\n        link.click();\n\n        // Clean up the temporary link\n        URL.revokeObjectURL(link.href);\n\n        // Set the response message\n        setResponse('Code files generated successfully!');\n      }\n    } catch (error) {\n      // Handle any errors that occur during the API request\n      setResponse('Error generating code files.');\n    }\n    setLoading(false);\n  };\n  const createFile = (folder, fileName, code) => {\n    folder.file(fileName, code);\n  };\n\n  // Rest of the code...\n\n  const downloadFile = downloadUrl => {\n    const link = document.createElement('a');\n    link.href = downloadUrl;\n    link.download = 'GeneratedFolder.zip';\n    link.click();\n    URL.revokeObjectURL(downloadUrl);\n  };\n  const generateAndDownloadFiles = async () => {\n    setLoading(true);\n    updatePromptValue();\n    try {\n      const code = await generateCodeFiles();\n      const folderName = 'GeneratedFolder';\n      const files = [{\n        name: 'file1.js',\n        code: code\n      }\n      // Add more files here if needed\n      ];\n\n      const zip = new JSZip();\n      const folder = zip.folder(folderName);\n      files.forEach(file => {\n        const fileName = `${file.name}`;\n        createFile(folder, fileName, file.code);\n      });\n      const zipBlob = await zip.generateAsync({\n        type: 'blob'\n      });\n      const zipDownloadLink = URL.createObjectURL(zipBlob);\n      downloadFile(zipDownloadLink);\n      setResponse('Project files received. Click the button to download.');\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n  };\n\n  // Rest of the code...\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:5555/chat', {\n        prompt\n      });\n      setResponse(res.data);\n      setLoading(false);\n\n      // Call the function to generate and download the files\n      generateAndDownloadFiles();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Rest of the code remains the same\n\n  const programmingLanguages = [{\n    name: \"JavaScript\",\n    frameworks: [{\n      name: \"React\",\n      versions: [\"17.0.2\", \"16.13.1\"],\n      libraries: [\"React-DOM\", \"Redux\"]\n    }, {\n      name: \"Angular\",\n      versions: [\"12.0.0\", \"11.2.14\"],\n      libraries: [\"RxJS\", \"NgRx\"]\n    }]\n  }, {\n    name: \"Python\",\n    frameworks: [{\n      name: \"Django\",\n      versions: [\"3.2.4\", \"2.2.24\"],\n      libraries: [\"Django REST Framework\", \"Celery\"]\n    }, {\n      name: \"Flask\",\n      versions: [\"2.0.1\", \"1.1.4\"],\n      libraries: [\"Flask-RESTful\", \"SQLAlchemy\"]\n    }]\n  }, {\n    name: \"Java\",\n    frameworks: [{\n      name: \"Spring Boot\",\n      versions: [\"2.5.0\", \"2.4.6\"],\n      libraries: [\"Spring Data JPA\", \"Spring Security\"]\n    }, {\n      name: \"Hibernate\",\n      versions: [\"5.5.3\", \"5.4.31\"],\n      libraries: [\"Java Persistence API (JPA)\", \"C3P0\"]\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: AppLogo,\n      alt: \"\",\n      className: \"app-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: CGLogo,\n          alt: \"\",\n          className: loading ? 'cg-logo loading' : 'cg-logo'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            width: \"1300px\"\n          },\n          value: selectedProfile,\n          onChange: e => handleProfileSelection(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Front-end Developer\",\n            children: \"Front-end Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Back-end Developer\",\n            children: \"Back-end Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Full-stack Developer\",\n            children: \"Full-stack Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mobile App Developer\",\n            children: \"Mobile App Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Game Developer\",\n            children: \"Game Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DevOps Engineer\",\n            children: \"DevOps Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Quality Assurance (QA) Engineer\",\n            children: \"Quality Assurance (QA) Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"UI/UX Developer\",\n            children: \"UI/UX Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Data Engineer\",\n            children: \"Data Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Machine Learning Engineer\",\n            children: \"Machine Learning Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputs[0] || \"\",\n            placeholder: \"Provide your Main Task\",\n            onChange: e => handleInputChange(0, e.target.value),\n            style: {\n              marginRight: \"65px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }, this), inputs.slice(1).map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            placeholder: \"Add a functionality\",\n            onChange: e => handleInputChange(index + 1, e.target.value),\n            style: {\n              marginRight: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteInput(index + 1),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 11\n          }, this)]\n        }, index + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddInput,\n          children: \"Add a functionality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Programming Languages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 9\n        }, this), programmingLanguages.map(language => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLanguageClick(language.name),\n          style: {\n            marginRight: \"10px\",\n            marginBottom: \"10px\",\n            backgroundColor: selectedLanguages.includes(language.name) ? \"lightblue\" : \"#ccc\",\n            color: \"#fff\"\n          },\n          children: language.name\n        }, language.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 7\n      }, this), selectedLanguages.map(selectedLanguage => {\n        const language = programmingLanguages.find(lang => lang.name === selectedLanguage);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Frameworks for \", selectedLanguage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), language.frameworks.map(framework => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFrameworkClick(framework.name),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedFrameworks.includes(framework.name) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: framework.name\n          }, framework.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this))]\n        }, selectedLanguage, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this);\n      }), selectedFrameworks.map(selectedFramework => {\n        const language = programmingLanguages.find(lang => lang.frameworks.some(fw => fw.name === selectedFramework));\n        const framework = language.frameworks.find(fw => fw.name === selectedFramework);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Versions for \", selectedFramework]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), framework.versions.map(version => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVersionClick(version),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedVersions.includes(version) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: version\n          }, version, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this))]\n        }, selectedFramework, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this);\n      }), selectedFrameworks.map(selectedFramework => {\n        const language = programmingLanguages.find(lang => lang.frameworks.some(fw => fw.name === selectedFramework));\n        const framework = language.frameworks.find(fw => fw.name === selectedFramework);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Libraries for \", selectedFramework]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), framework.libraries.map(library => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLibraryClick(library),\n            style: {\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedLibraries.includes(library) ? \"lightblue\" : \"#ccc\",\n              color: \"#fff\"\n            },\n            children: library\n          }, library, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this))]\n        }, selectedFramework, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        onClick: handleSubmit,\n        children: \"Generate and Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"response-area\",\n      children: loading ? 'loading...' : response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Uj3Q9GizdRFM8HUxWSlh/x4FNX4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","CGLogo","AppLogo","JSZip","App","inputs","setInputs","selectedLanguages","setSelectedLanguages","selectedFrameworks","setSelectedFrameworks","selectedVersions","setSelectedVersions","selectedLibraries","setSelectedLibraries","selectedProfile","setSelectedProfile","prompt","setPrompt","response","setResponse","loading","setLoading","handleProfileSelection","profile","handleAddInput","handleDeleteInput","index","updatedInputs","splice","handleInputChange","value","handleLanguageClick","language","includes","filter","lang","handleFrameworkClick","framework","fw","handleVersionClick","version","ver","handleLibraryClick","library","lib","updatePromptValue","promptValue","slice","join","generateCodeFiles","post","status","codeFiles","data","zip","forEach","file","name","content","generateAsync","type","link","document","createElement","href","URL","createObjectURL","download","click","revokeObjectURL","error","createFile","folder","fileName","code","downloadFile","downloadUrl","generateAndDownloadFiles","folderName","files","zipBlob","zipDownloadLink","err","console","handleSubmit","e","preventDefault","res","programmingLanguages","frameworks","versions","libraries","width","target","display","alignItems","marginRight","map","input","marginBottom","backgroundColor","color","selectedLanguage","find","selectedFramework","some"],"sources":["C:/Users/rayze/Downloads/chatgpt-react-js-main (1)/chatgpt-react-js-main/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport CGLogo from './chatGPT.png';\nimport AppLogo from './app-logo.png';\nimport './App.css';\nimport JSZip from 'jszip';\n\nconst App = () => {\n  const [inputs, setInputs] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedVersions, setSelectedVersions] = useState([]);\n  const [selectedLibraries, setSelectedLibraries] = useState([]);\n  const [selectedProfile, setSelectedProfile] = useState(\"\");\n\n  const [prompt, setPrompt] = useState('');\n\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n\n\n  const handleProfileSelection = (profile) => {\n    setSelectedProfile(profile);\n  };\n\n\n  const handleAddInput = () => {\n    setInputs([...inputs, \"\"]);\n  };\n\n  const handleDeleteInput = (index) => {\n    const updatedInputs = [...inputs];\n    updatedInputs.splice(index, 1);\n    setInputs(updatedInputs);\n  };\n\n  const handleInputChange = (index, value) => {\n    const updatedInputs = [...inputs];\n    updatedInputs[index] = value;\n    setInputs(updatedInputs);\n  };\n\n  const handleLanguageClick = (language) => {\n    if (selectedLanguages.includes(language)) {\n      setSelectedLanguages(\n        selectedLanguages.filter((lang) => lang !== language)\n      );\n      setSelectedFrameworks([]);\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n\n  const handleFrameworkClick = (framework) => {\n    if (selectedFrameworks.includes(framework)) {\n      setSelectedFrameworks(\n        selectedFrameworks.filter((fw) => fw !== framework)\n      );\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedFrameworks([...selectedFrameworks, framework]);\n    }\n  };\n\n  const handleVersionClick = (version) => {\n    if (selectedVersions.includes(version)) {\n      setSelectedVersions(selectedVersions.filter((ver) => ver !== version));\n    } else {\n      setSelectedVersions([...selectedVersions, version]);\n    }\n  };\n\n  const handleLibraryClick = (library) => {\n    if (selectedLibraries.includes(library)) {\n      setSelectedLibraries(selectedLibraries.filter((lib) => lib !== library));\n    } else {\n      setSelectedLibraries([...selectedLibraries, library]);\n    }\n  };\n\n  const updatePromptValue = () => {\n    const promptValue = `Act as a highly experienced and seasoned :${selectedProfile} in the field .Build a: ${inputs.slice(0)}. Your goal is to generate a code handling the following tasks: ${inputs.slice(1).join(', ')} in: ${selectedLanguages.join(', ')} using: ${selectedFrameworks.join(', ')} with :${selectedVersions.join(', ')} and ${selectedLibraries.join(', ')}.\nThen, act as a bug detector and review your code for security vulnerabilities and locate any logic errors or resource leaks and add the fixes needed.\nThen, act as a code reviewer and analyze the whole previous provided code for code smells and assess the test coverage and add improvements to your code.\nThen, act as a bug detector and review my code for security vulnerabilities and locate any logic errors and add the fixes needed.\nResponses should not be translations of my input, but code written in the language I specified. Do not write explanations in your reply. Keep in mind that it is important to be concise, specific, and straight to the point.`;\n    setPrompt(promptValue);\n  };\n\n  const generateCodeFiles = async () => {\n    setLoading(true);\n    setResponse('');\n  \n    try {\n      // Make a POST request to the API endpoint\n      const response = await axios.post('/api/generate-code', {\n        prompt,\n      });\n  \n      // Check if the response is successful\n      if (response.status === 200) {\n        const { codeFiles } = response.data;\n  \n        // Create a zip file using JSZip\n        const zip = new JSZip();\n  \n        // Add each code file to the zip\n        codeFiles.forEach((file) => {\n          zip.file(file.name, file.content);\n        });\n  \n        // Generate the zip file\n        const content = await zip.generateAsync({ type: 'blob' });\n  \n        // Create a temporary link to download the zip file\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(content);\n        link.download = 'code-files.zip';\n        link.click();\n  \n        // Clean up the temporary link\n        URL.revokeObjectURL(link.href);\n  \n        // Set the response message\n        setResponse('Code files generated successfully!');\n      }\n    } catch (error) {\n      // Handle any errors that occur during the API request\n      setResponse('Error generating code files.');\n    }\n  \n    setLoading(false);\n  };\n  \n\n  const createFile = (folder, fileName, code) => {\n    folder.file(fileName, code);\n  };\n  \n // Rest of the code...\n\nconst downloadFile = (downloadUrl) => {\n  const link = document.createElement('a');\n  link.href = downloadUrl;\n  link.download = 'GeneratedFolder.zip';\n  link.click();\n  URL.revokeObjectURL(downloadUrl);\n};\n\nconst generateAndDownloadFiles = async () => {\n  setLoading(true);\n  updatePromptValue();\n\n  try {\n    const code = await generateCodeFiles();\n    const folderName = 'GeneratedFolder';\n    const files = [\n      { name: 'file1.js', code: code },\n      // Add more files here if needed\n    ];\n\n    const zip = new JSZip();\n    const folder = zip.folder(folderName);\n\n    files.forEach((file) => {\n      const fileName = `${file.name}`;\n      createFile(folder, fileName, file.code);\n    });\n\n    const zipBlob = await zip.generateAsync({ type: 'blob' });\n    const zipDownloadLink = URL.createObjectURL(zipBlob);\n\n    downloadFile(zipDownloadLink);\n    setResponse('Project files received. Click the button to download.');\n  } catch (err) {\n    console.error(err);\n  }\n\n  setLoading(false);\n};\n\n// Rest of the code...\n\n\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n  \n    try {\n      const res = await axios.post('http://localhost:5555/chat', { prompt });\n      setResponse(res.data);\n      setLoading(false);\n  \n      // Call the function to generate and download the files\n      generateAndDownloadFiles();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  \n  // Rest of the code remains the same\n  \n  \n  \n  const programmingLanguages = [\n    {\n      name: \"JavaScript\",\n      frameworks: [\n        {\n          name: \"React\",\n          versions: [\"17.0.2\", \"16.13.1\"],\n          libraries: [\"React-DOM\", \"Redux\"],\n        },\n        {\n          name: \"Angular\",\n          versions: [\"12.0.0\", \"11.2.14\"],\n          libraries: [\"RxJS\", \"NgRx\"],\n        },\n      ],\n    },\n    {\n      name: \"Python\",\n      frameworks: [\n        {\n          name: \"Django\",\n          versions: [\"3.2.4\", \"2.2.24\"],\n          libraries: [\"Django REST Framework\", \"Celery\"],\n        },\n        {\n          name: \"Flask\",\n          versions: [\"2.0.1\", \"1.1.4\"],\n          libraries: [\"Flask-RESTful\", \"SQLAlchemy\"],\n        },\n      ],\n    },\n    {\n      name: \"Java\",\n      frameworks: [\n        {\n          name: \"Spring Boot\",\n          versions: [\"2.5.0\", \"2.4.6\"],\n          libraries: [\"Spring Data JPA\", \"Spring Security\"],\n        },\n        {\n          name: \"Hibernate\",\n          versions: [\"5.5.3\", \"5.4.31\"],\n          libraries: [\"Java Persistence API (JPA)\", \"C3P0\"],\n        },\n      ],\n    },\n  ];\n\n  return (\n    <div className=\"wrapper\">\n      <img src={AppLogo} alt=\"\" className=\"app-logo\" />\n      <form onSubmit={handleSubmit}>\n        <div>\n        <img src={CGLogo} alt=\"\" className={loading ? 'cg-logo loading' : 'cg-logo'} />\n        <select\n          style={{ width: \"1300px\" }}\n          value={selectedProfile}\n          onChange={(e) => handleProfileSelection(e.target.value)}\n        >\n          <option value=\"\">Select a profile</option>\n          <option value=\"Front-end Developer\">Front-end Developer</option>\n          <option value=\"Back-end Developer\">Back-end Developer</option>\n          <option value=\"Full-stack Developer\">Full-stack Developer</option>\n          <option value=\"Mobile App Developer\">Mobile App Developer</option>\n          <option value=\"Game Developer\">Game Developer</option>\n          <option value=\"DevOps Engineer\">DevOps Engineer</option>\n          <option value=\"Quality Assurance (QA) Engineer\">\n            Quality Assurance (QA) Engineer\n          </option>\n          <option value=\"UI/UX Developer\">UI/UX Developer</option>\n          <option value=\"Data Engineer\">Data Engineer</option>\n          <option value=\"Machine Learning Engineer\">\n            Machine Learning Engineer\n          </option>\n        </select>\n\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <input\n          type=\"text\"\n          value={inputs[0] || \"\"}\n          placeholder=\"Provide your Main Task\"\n          onChange={(e) => handleInputChange(0, e.target.value)}\n          style={{ marginRight: \"65px\" }}\n        />\n      </div>\n\n      {inputs.slice(1).map((input,index) => (\n        <div key={index + 1} style={{ display: \"flex\", alignItems: \"center\" }}>\n          <input\n            type=\"text\"\n            value={input}\n            placeholder=\"Add a functionality\"\n            onChange={(e) => handleInputChange(index + 1, e.target.value)}\n            style={{ marginRight: \"10px\" }}\n          />\n          <button onClick={() => handleDeleteInput(index + 1)}>Delete</button>\n        </div>\n      ))}\n\n        <button onClick={handleAddInput}>Add a functionality</button>\n      </div>\n    \n      <div>\n        {/* Display programming languages */}\n        <h3>Programming Languages</h3>\n        {programmingLanguages.map((language) => (\n          <button\n            key={language.name}\n            onClick={() => handleLanguageClick(language.name)}\n            style={{\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedLanguages.includes(language.name)\n                ? \"lightblue\"\n                : \"#ccc\",\n              color: \"#fff\",\n            }}\n          >\n            {language.name}\n          </button>\n        ))}\n      </div>\n\n      {selectedLanguages.map((selectedLanguage) => {\n        const language = programmingLanguages.find(\n          (lang) => lang.name === selectedLanguage\n        );\n\n        return (\n          <div key={selectedLanguage}>\n            <h3>Frameworks for {selectedLanguage}</h3>\n            {language.frameworks.map((framework) => (\n              <button\n                key={framework.name}\n                onClick={() => handleFrameworkClick(framework.name)}\n                style={{\n                  marginRight: \"10px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: selectedFrameworks.includes(framework.name)\n                    ? \"lightblue\"\n                    : \"#ccc\",\n                  color: \"#fff\",\n                }}\n              >\n                {framework.name}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n\n      {/* Display selected versions */}\n      {selectedFrameworks.map((selectedFramework) => {\n        const language = programmingLanguages.find((lang) =>\n          lang.frameworks.some((fw) => fw.name === selectedFramework)\n        );\n        const framework = language.frameworks.find(\n          (fw) => fw.name === selectedFramework\n        );\n\n        return (\n          <div key={selectedFramework}>\n            <h3>Versions for {selectedFramework}</h3>\n            {framework.versions.map((version) => (\n              <button\n                key={version}\n                onClick={() => handleVersionClick(version)}\n                style={{\n                  marginRight: \"10px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: selectedVersions.includes(version)\n                    ? \"lightblue\"\n                    : \"#ccc\",\n                  color: \"#fff\",\n                }}\n              >\n                {version}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n\n      {/* Display selected libraries */}\n      {selectedFrameworks.map((selectedFramework) => {\n        const language = programmingLanguages.find((lang) =>\n          lang.frameworks.some((fw) => fw.name === selectedFramework)\n        );\n        const framework = language.frameworks.find(\n          (fw) => fw.name === selectedFramework\n        );\n\n        return (\n          <div key={selectedFramework}>\n            <h3>Libraries for {selectedFramework}</h3>\n            {framework.libraries.map((library) => (\n              <button\n                key={library}\n                onClick={() => handleLibraryClick(library)}\n                style={{\n                  marginRight: \"10px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: selectedLibraries.includes(library)\n                    ? \"lightblue\"\n                    : \"#ccc\",\n                  color: \"#fff\",\n                }}\n              >\n                {library}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n\n<button type=\"submit\" disabled={loading} onClick={handleSubmit}>\n  Generate and Download\n</button>\n\n</form>\n<p className=\"response-area\">{loading ? 'loading...' : response}</p>\n     \n   </div>\n \n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rayze\\\\Downloads\\\\chatgpt-react-js-main (1)\\\\chatgpt-react-js-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport CGLogo from './chatGPT.png';\nimport AppLogo from './app-logo.png';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputs, setInputs] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedVersions, setSelectedVersions] = useState([]);\n  const [selectedLibraries, setSelectedLibraries] = useState([]);\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleAddInput = () => {\n    setInputs([...inputs, \"\"]);\n  };\n  const handleDeleteInput = index => {\n    const updatedInputs = [...inputs];\n    updatedInputs.splice(index, 1);\n    setInputs(updatedInputs);\n  };\n  const handleInputChange = (index, value) => {\n    const updatedInputs = [...inputs];\n    updatedInputs[index] = value;\n    setInputs(updatedInputs);\n  };\n  const handleLanguageClick = language => {\n    if (selectedLanguages.includes(language)) {\n      setSelectedLanguages(selectedLanguages.filter(lang => lang !== language));\n      setSelectedFrameworks([]);\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n  const handleFrameworkClick = framework => {\n    if (selectedFrameworks.includes(framework)) {\n      setSelectedFrameworks(selectedFrameworks.filter(fw => fw !== framework));\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedFrameworks([...selectedFrameworks, framework]);\n    }\n  };\n  const handleVersionClick = version => {\n    if (selectedVersions.includes(version)) {\n      setSelectedVersions(selectedVersions.filter(ver => ver !== version));\n    } else {\n      setSelectedVersions([...selectedVersions, version]);\n    }\n  };\n  const handleLibraryClick = library => {\n    if (selectedLibraries.includes(library)) {\n      setSelectedLibraries(selectedLibraries.filter(lib => lib !== library));\n    } else {\n      setSelectedLibraries([...selectedLibraries, library]);\n    }\n  };\n  const handleSendInputs = () => {\n    console.log(\"Input values:\", inputs);\n    console.log(\"Selected languages:\", selectedLanguages);\n    console.log(\"Selected frameworks:\", selectedFrameworks);\n    console.log(\"Selected versions:\", selectedVersions);\n    console.log(\"Selected libraries:\", selectedLibraries);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    axios.post('http://localhost:5555/chat', {\n      prompt\n    }).then(res => {\n      setResponse(res.data);\n      setLoading(false);\n\n      // Create a Blob with the project code\n      const projectCode = new Blob([res.data], {\n        type: 'text/plain'\n      });\n\n      // Create a download link\n      const downloadLink = URL.createObjectURL(projectCode);\n\n      // Trigger the download\n      const link = document.createElement('a');\n      link.href = downloadLink;\n      link.download = 'project.js';\n      link.click();\n      setResponse('Project code received. Click the link to download.');\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  const programmingLanguages = [\n    // your programming language data here\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: AppLogo,\n      alt: \"\",\n      className: \"app-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: CGLogo,\n        alt: \"\",\n        className: loading ? 'cg-logo loading' : 'cg-logo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        placeholder: \"Ask anything... :)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"response-area\",\n      children: loading ? 'loading...' : response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: \"~ webstylepress ~\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [inputs.map((input, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => handleInputChange(index, e.target.value),\n          style: {\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteInput(index),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddInput,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Programming Languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), programmingLanguages.map(language => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLanguageClick(language.name),\n        style: {\n          marginRight: \"10px\",\n          marginBottom: \"10px\",\n          backgroundColor: selectedLanguages.includes(language.name) ? \"lightblue\" : \"#ccc\",\n          color: \"#fff\"\n        },\n        children: language.name\n      }, language.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), selectedLanguages.map(selectedLanguage => {\n      const language = programmingLanguages.find(lang => lang.name === selectedLanguage);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Frameworks for \", selectedLanguage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), language.frameworks.map(framework => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFrameworkClick(framework.name),\n          style: {\n            marginRight: \"10px\",\n            marginBottom: \"10px\",\n            backgroundColor: selectedFrameworks.includes(framework.name) ? \"lightblue\" : \"#ccc\",\n            color: \"#fff\"\n          },\n          children: framework.name\n        }, framework.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this))]\n      }, selectedLanguage, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this);\n    }), selectedFrameworks.map(selectedFramework => {\n      const language = programmingLanguages.find(lang => lang.frameworks.some(fw => fw.name === selectedFramework));\n      const framework = language.frameworks.find(fw => fw.name === selectedFramework);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Versions for \", selectedFramework]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), framework.versions.map(version => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVersionClick(version),\n          style: {\n            marginRight: \"10px\",\n            marginBottom: \"10px\",\n            backgroundColor: selectedVersions.includes(version) ? \"lightblue\" : \"#ccc\",\n            color: \"#fff\"\n          },\n          children: version\n        }, version, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this))]\n      }, selectedFramework, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this);\n    }), selectedFrameworks.map(selectedFramework => {\n      const language = programmingLanguages.find(lang => lang.frameworks.some(fw => fw.name === selectedFramework));\n      const framework = language.frameworks.find(fw => fw.name === selectedFramework);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Libraries for \", selectedFramework]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), framework.libraries.map(library => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLibraryClick(library),\n          style: {\n            marginRight: \"10px\",\n            marginBottom: \"10px\",\n            backgroundColor: selectedLibraries.includes(library) ? \"lightblue\" : \"#ccc\",\n            color: \"#fff\"\n          },\n          children: library\n        }, library, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this))]\n      }, selectedFramework, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendInputs,\n      children: \"Send Inputs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LUq1z22Pjf8m+NXMkNq4/gE9UBI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","CGLogo","AppLogo","App","inputs","setInputs","selectedLanguages","setSelectedLanguages","selectedFrameworks","setSelectedFrameworks","selectedVersions","setSelectedVersions","selectedLibraries","setSelectedLibraries","prompt","setPrompt","response","setResponse","loading","setLoading","handleAddInput","handleDeleteInput","index","updatedInputs","splice","handleInputChange","value","handleLanguageClick","language","includes","filter","lang","handleFrameworkClick","framework","fw","handleVersionClick","version","ver","handleLibraryClick","library","lib","handleSendInputs","console","log","handleSubmit","e","preventDefault","post","then","res","data","projectCode","Blob","type","downloadLink","URL","createObjectURL","link","document","createElement","href","download","click","catch","err","error","programmingLanguages","target","map","input","display","alignItems","marginRight","name","marginBottom","backgroundColor","color","selectedLanguage","find","frameworks","selectedFramework","some","versions","libraries"],"sources":["C:/Users/rayze/Downloads/chatgpt-react-js-main (1)/chatgpt-react-js-main/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport CGLogo from './chatGPT.png';\nimport AppLogo from './app-logo.png';\nimport './App.css';\n\nconst App = () => {\n  const [inputs, setInputs] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedFrameworks, setSelectedFrameworks] = useState([]);\n  const [selectedVersions, setSelectedVersions] = useState([]);\n  const [selectedLibraries, setSelectedLibraries] = useState([]);\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleAddInput = () => {\n    setInputs([...inputs, \"\"]);\n  };\n\n  const handleDeleteInput = (index) => {\n    const updatedInputs = [...inputs];\n    updatedInputs.splice(index, 1);\n    setInputs(updatedInputs);\n  };\n\n  const handleInputChange = (index, value) => {\n    const updatedInputs = [...inputs];\n    updatedInputs[index] = value;\n    setInputs(updatedInputs);\n  };\n\n  const handleLanguageClick = (language) => {\n    if (selectedLanguages.includes(language)) {\n      setSelectedLanguages(\n        selectedLanguages.filter((lang) => lang !== language)\n      );\n      setSelectedFrameworks([]);\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedLanguages([...selectedLanguages, language]);\n    }\n  };\n\n  const handleFrameworkClick = (framework) => {\n    if (selectedFrameworks.includes(framework)) {\n      setSelectedFrameworks(\n        selectedFrameworks.filter((fw) => fw !== framework)\n      );\n      setSelectedVersions([]);\n      setSelectedLibraries([]);\n    } else {\n      setSelectedFrameworks([...selectedFrameworks, framework]);\n    }\n  };\n\n  const handleVersionClick = (version) => {\n    if (selectedVersions.includes(version)) {\n      setSelectedVersions(selectedVersions.filter((ver) => ver !== version));\n    } else {\n      setSelectedVersions([...selectedVersions, version]);\n    }\n  };\n\n  const handleLibraryClick = (library) => {\n    if (selectedLibraries.includes(library)) {\n      setSelectedLibraries(selectedLibraries.filter((lib) => lib !== library));\n    } else {\n      setSelectedLibraries([...selectedLibraries, library]);\n    }\n  };\n\n  const handleSendInputs = () => {\n    console.log(\"Input values:\", inputs);\n    console.log(\"Selected languages:\", selectedLanguages);\n    console.log(\"Selected frameworks:\", selectedFrameworks);\n    console.log(\"Selected versions:\", selectedVersions);\n    console.log(\"Selected libraries:\", selectedLibraries);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    axios\n      .post('http://localhost:5555/chat', { prompt })\n      .then((res) => {\n        setResponse(res.data);\n        setLoading(false);\n\n        // Create a Blob with the project code\n        const projectCode = new Blob([res.data], { type: 'text/plain' });\n\n        // Create a download link\n        const downloadLink = URL.createObjectURL(projectCode);\n\n        // Trigger the download\n        const link = document.createElement('a');\n        link.href = downloadLink;\n        link.download = 'project.js';\n        link.click();\n\n        setResponse('Project code received. Click the link to download.');\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n  const programmingLanguages = [\n    // your programming language data here\n  ];\n\n  return (\n    <div className=\"wrapper\">\n      <img src={AppLogo} alt=\"\" className=\"app-logo\" />\n      <form onSubmit={handleSubmit}>\n        <img src={CGLogo} alt=\"\" className={loading ? 'cg-logo loading' : 'cg-logo'} />\n        <input\n          type=\"text\"\n          value={prompt}\n          onChange={(e) => setPrompt(e.target.value)}\n          placeholder=\"Ask anything... :)\"\n        />\n        <button type=\"submit\">Ask</button>\n      </form>\n      <p className=\"response-area\">{loading ? 'loading...' : response}</p>\n      <div className=\"footer\">~ webstylepress ~</div>\n\n      {/* Your additional code here */}\n      <div>\n        {/* Display inputs */}\n        {inputs.map((input, index) => (\n          <div key={index} style={{ display: \"flex\", alignItems: \"center\" }}>\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => handleInputChange(index, e.target.value)}\n              style={{ marginRight: \"10px\" }}\n            />\n            <button onClick={() => handleDeleteInput(index)}>-</button>\n          </div>\n        ))}\n\n        <button onClick={handleAddInput}>+</button>\n      </div>\n\n      <div>\n        {/* Display programming languages */}\n        <h3>Programming Languages</h3>\n        {programmingLanguages.map((language) => (\n          <button\n            key={language.name}\n            onClick={() => handleLanguageClick(language.name)}\n            style={{\n              marginRight: \"10px\",\n              marginBottom: \"10px\",\n              backgroundColor: selectedLanguages.includes(language.name)\n                ? \"lightblue\"\n                : \"#ccc\",\n              color: \"#fff\",\n            }}\n          >\n            {language.name}\n          </button>\n        ))}\n      </div>\n\n      {/* Display selected frameworks */}\n      {selectedLanguages.map((selectedLanguage) => {\n        const language = programmingLanguages.find(\n          (lang) => lang.name === selectedLanguage\n        );\n\n        return (\n          <div key={selectedLanguage}>\n            <h3>Frameworks for {selectedLanguage}</h3>\n            {language.frameworks.map((framework) => (\n              <button\n                key={framework.name}\n                onClick={() => handleFrameworkClick(framework.name)}\n                style={{\n                  marginRight: \"10px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: selectedFrameworks.includes(framework.name)\n                    ? \"lightblue\"\n                    : \"#ccc\",\n                  color: \"#fff\",\n                }}\n              >\n                {framework.name}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n\n      {/* Display selected versions */}\n      {selectedFrameworks.map((selectedFramework) => {\n        const language = programmingLanguages.find((lang) =>\n          lang.frameworks.some((fw) => fw.name === selectedFramework)\n        );\n        const framework = language.frameworks.find(\n          (fw) => fw.name === selectedFramework\n        );\n\n        return (\n          <div key={selectedFramework}>\n            <h3>Versions for {selectedFramework}</h3>\n            {framework.versions.map((version) => (\n              <button\n                key={version}\n                onClick={() => handleVersionClick(version)}\n                style={{\n                  marginRight: \"10px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: selectedVersions.includes(version)\n                    ? \"lightblue\"\n                    : \"#ccc\",\n                  color: \"#fff\",\n                }}\n              >\n                {version}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n\n      {/* Display selected libraries */}\n      {selectedFrameworks.map((selectedFramework) => {\n        const language = programmingLanguages.find((lang) =>\n          lang.frameworks.some((fw) => fw.name === selectedFramework)\n        );\n        const framework = language.frameworks.find(\n          (fw) => fw.name === selectedFramework\n        );\n\n        return (\n          <div key={selectedFramework}>\n            <h3>Libraries for {selectedFramework}</h3>\n            {framework.libraries.map((library) => (\n              <button\n                key={library}\n                onClick={() => handleLibraryClick(library)}\n                style={{\n                  marginRight: \"10px\",\n                  marginBottom: \"10px\",\n                  backgroundColor: selectedLibraries.includes(library)\n                    ? \"lightblue\"\n                    : \"#ccc\",\n                  color: \"#fff\",\n                }}\n              >\n                {library}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n\n      {/* Send Inputs button */}\n      <button onClick={handleSendInputs}>Send Inputs</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}